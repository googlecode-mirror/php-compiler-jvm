

Terminals which are not used:

   NEW
   THIS
   STATIC
   PARENT
   SCOPEOP
   '.'


Conflict in state 64 between rule 43 and token COR resolved as reduce.
Conflict in state 64 between rule 43 and token CAND resolved as reduce.
Conflict in state 64 between rule 43 and token POR resolved as reduce.
Conflict in state 64 between rule 43 and token PAND resolved as reduce.
Conflict in state 64 between rule 43 and token PLUSAS resolved as reduce.
Conflict in state 64 between rule 43 and token MINUSAS resolved as reduce.
Conflict in state 64 between rule 43 and token MULTAS resolved as reduce.
Conflict in state 64 between rule 43 and token DIVAS resolved as reduce.
Conflict in state 64 between rule 43 and token MODAS resolved as reduce.
Conflict in state 64 between rule 43 and token INC resolved as reduce.
Conflict in state 64 between rule 43 and token DEC resolved as reduce.
Conflict in state 64 between rule 43 and token EQ resolved as reduce.
Conflict in state 64 between rule 43 and token NEQ resolved as reduce.
Conflict in state 64 between rule 43 and token GEQ resolved as reduce.
Conflict in state 64 between rule 43 and token LEQ resolved as reduce.
Conflict in state 64 between rule 43 and token TEQ resolved as reduce.
Conflict in state 64 between rule 43 and token TNEQ resolved as reduce.
Conflict in state 64 between rule 43 and token '=' resolved as reduce.
Conflict in state 64 between rule 43 and token '>' resolved as reduce.
Conflict in state 64 between rule 43 and token '<' resolved as reduce.
Conflict in state 64 between rule 43 and token '+' resolved as reduce.
Conflict in state 64 between rule 43 and token '-' resolved as reduce.
Conflict in state 64 between rule 43 and token '*' resolved as reduce.
Conflict in state 64 between rule 43 and token '/' resolved as reduce.
Conflict in state 64 between rule 43 and token '%' resolved as reduce.
Conflict in state 65 between rule 44 and token COR resolved as reduce.
Conflict in state 65 between rule 44 and token CAND resolved as reduce.
Conflict in state 65 between rule 44 and token POR resolved as reduce.
Conflict in state 65 between rule 44 and token PAND resolved as reduce.
Conflict in state 65 between rule 44 and token PLUSAS resolved as reduce.
Conflict in state 65 between rule 44 and token MINUSAS resolved as reduce.
Conflict in state 65 between rule 44 and token MULTAS resolved as reduce.
Conflict in state 65 between rule 44 and token DIVAS resolved as reduce.
Conflict in state 65 between rule 44 and token MODAS resolved as reduce.
Conflict in state 65 between rule 44 and token INC resolved as reduce.
Conflict in state 65 between rule 44 and token DEC resolved as reduce.
Conflict in state 65 between rule 44 and token EQ resolved as reduce.
Conflict in state 65 between rule 44 and token NEQ resolved as reduce.
Conflict in state 65 between rule 44 and token GEQ resolved as reduce.
Conflict in state 65 between rule 44 and token LEQ resolved as reduce.
Conflict in state 65 between rule 44 and token TEQ resolved as reduce.
Conflict in state 65 between rule 44 and token TNEQ resolved as reduce.
Conflict in state 65 between rule 44 and token '=' resolved as reduce.
Conflict in state 65 between rule 44 and token '>' resolved as reduce.
Conflict in state 65 between rule 44 and token '<' resolved as reduce.
Conflict in state 65 between rule 44 and token '+' resolved as reduce.
Conflict in state 65 between rule 44 and token '-' resolved as reduce.
Conflict in state 65 between rule 44 and token '*' resolved as reduce.
Conflict in state 65 between rule 44 and token '/' resolved as reduce.
Conflict in state 65 between rule 44 and token '%' resolved as reduce.
Conflict in state 66 between rule 33 and token COR resolved as reduce.
Conflict in state 66 between rule 33 and token CAND resolved as reduce.
Conflict in state 66 between rule 33 and token POR resolved as reduce.
Conflict in state 66 between rule 33 and token PAND resolved as reduce.
Conflict in state 66 between rule 33 and token PLUSAS resolved as reduce.
Conflict in state 66 between rule 33 and token MINUSAS resolved as reduce.
Conflict in state 66 between rule 33 and token MULTAS resolved as reduce.
Conflict in state 66 between rule 33 and token DIVAS resolved as reduce.
Conflict in state 66 between rule 33 and token MODAS resolved as reduce.
Conflict in state 66 between rule 33 and token INC resolved as shift.
Conflict in state 66 between rule 33 and token DEC resolved as shift.
Conflict in state 66 between rule 33 and token EQ resolved as reduce.
Conflict in state 66 between rule 33 and token NEQ resolved as reduce.
Conflict in state 66 between rule 33 and token GEQ resolved as reduce.
Conflict in state 66 between rule 33 and token LEQ resolved as reduce.
Conflict in state 66 between rule 33 and token TEQ resolved as reduce.
Conflict in state 66 between rule 33 and token TNEQ resolved as reduce.
Conflict in state 66 between rule 33 and token '=' resolved as reduce.
Conflict in state 66 between rule 33 and token '>' resolved as reduce.
Conflict in state 66 between rule 33 and token '<' resolved as reduce.
Conflict in state 66 between rule 33 and token '+' resolved as reduce.
Conflict in state 66 between rule 33 and token '-' resolved as reduce.
Conflict in state 66 between rule 33 and token '*' resolved as reduce.
Conflict in state 66 between rule 33 and token '/' resolved as reduce.
Conflict in state 66 between rule 33 and token '%' resolved as reduce.
Conflict in state 67 between rule 34 and token COR resolved as reduce.
Conflict in state 67 between rule 34 and token CAND resolved as reduce.
Conflict in state 67 between rule 34 and token POR resolved as reduce.
Conflict in state 67 between rule 34 and token PAND resolved as reduce.
Conflict in state 67 between rule 34 and token PLUSAS resolved as reduce.
Conflict in state 67 between rule 34 and token MINUSAS resolved as reduce.
Conflict in state 67 between rule 34 and token MULTAS resolved as reduce.
Conflict in state 67 between rule 34 and token DIVAS resolved as reduce.
Conflict in state 67 between rule 34 and token MODAS resolved as reduce.
Conflict in state 67 between rule 34 and token INC resolved as shift.
Conflict in state 67 between rule 34 and token DEC resolved as shift.
Conflict in state 67 between rule 34 and token EQ resolved as reduce.
Conflict in state 67 between rule 34 and token NEQ resolved as reduce.
Conflict in state 67 between rule 34 and token GEQ resolved as reduce.
Conflict in state 67 between rule 34 and token LEQ resolved as reduce.
Conflict in state 67 between rule 34 and token TEQ resolved as reduce.
Conflict in state 67 between rule 34 and token TNEQ resolved as reduce.
Conflict in state 67 between rule 34 and token '=' resolved as reduce.
Conflict in state 67 between rule 34 and token '>' resolved as reduce.
Conflict in state 67 between rule 34 and token '<' resolved as reduce.
Conflict in state 67 between rule 34 and token '+' resolved as reduce.
Conflict in state 67 between rule 34 and token '-' resolved as reduce.
Conflict in state 67 between rule 34 and token '*' resolved as reduce.
Conflict in state 67 between rule 34 and token '/' resolved as reduce.
Conflict in state 67 between rule 34 and token '%' resolved as reduce.
Conflict in state 68 between rule 23 and token COR resolved as reduce.
Conflict in state 68 between rule 23 and token CAND resolved as reduce.
Conflict in state 68 between rule 23 and token POR resolved as reduce.
Conflict in state 68 between rule 23 and token PAND resolved as reduce.
Conflict in state 68 between rule 23 and token PLUSAS resolved as reduce.
Conflict in state 68 between rule 23 and token MINUSAS resolved as reduce.
Conflict in state 68 between rule 23 and token MULTAS resolved as reduce.
Conflict in state 68 between rule 23 and token DIVAS resolved as reduce.
Conflict in state 68 between rule 23 and token MODAS resolved as reduce.
Conflict in state 68 between rule 23 and token INC resolved as shift.
Conflict in state 68 between rule 23 and token DEC resolved as shift.
Conflict in state 68 between rule 23 and token EQ resolved as reduce.
Conflict in state 68 between rule 23 and token NEQ resolved as reduce.
Conflict in state 68 between rule 23 and token GEQ resolved as reduce.
Conflict in state 68 between rule 23 and token LEQ resolved as reduce.
Conflict in state 68 between rule 23 and token TEQ resolved as reduce.
Conflict in state 68 between rule 23 and token TNEQ resolved as reduce.
Conflict in state 68 between rule 23 and token '=' resolved as reduce.
Conflict in state 68 between rule 23 and token '>' resolved as reduce.
Conflict in state 68 between rule 23 and token '<' resolved as reduce.
Conflict in state 68 between rule 23 and token '+' resolved as reduce.
Conflict in state 68 between rule 23 and token '-' resolved as reduce.
Conflict in state 68 between rule 23 and token '*' resolved as reduce.
Conflict in state 68 between rule 23 and token '/' resolved as reduce.
Conflict in state 68 between rule 23 and token '%' resolved as reduce.
Conflict in state 126 between rule 24 and token COR resolved as reduce.
Conflict in state 126 between rule 24 and token CAND resolved as reduce.
Conflict in state 126 between rule 24 and token POR resolved as reduce.
Conflict in state 126 between rule 24 and token PAND resolved as reduce.
Conflict in state 126 between rule 24 and token PLUSAS resolved as reduce.
Conflict in state 126 between rule 24 and token MINUSAS resolved as reduce.
Conflict in state 126 between rule 24 and token MULTAS resolved as reduce.
Conflict in state 126 between rule 24 and token DIVAS resolved as reduce.
Conflict in state 126 between rule 24 and token MODAS resolved as reduce.
Conflict in state 126 between rule 24 and token INC resolved as shift.
Conflict in state 126 between rule 24 and token DEC resolved as shift.
Conflict in state 126 between rule 24 and token EQ resolved as shift.
Conflict in state 126 between rule 24 and token NEQ resolved as shift.
Conflict in state 126 between rule 24 and token GEQ resolved as shift.
Conflict in state 126 between rule 24 and token LEQ resolved as shift.
Conflict in state 126 between rule 24 and token TEQ resolved as shift.
Conflict in state 126 between rule 24 and token TNEQ resolved as shift.
Conflict in state 126 between rule 24 and token '=' resolved as reduce.
Conflict in state 126 between rule 24 and token '>' resolved as shift.
Conflict in state 126 between rule 24 and token '<' resolved as shift.
Conflict in state 126 between rule 24 and token '+' resolved as shift.
Conflict in state 126 between rule 24 and token '-' resolved as shift.
Conflict in state 126 between rule 24 and token '*' resolved as shift.
Conflict in state 126 between rule 24 and token '/' resolved as shift.
Conflict in state 126 between rule 24 and token '%' resolved as shift.
Conflict in state 127 between rule 25 and token COR resolved as reduce.
Conflict in state 127 between rule 25 and token CAND resolved as reduce.
Conflict in state 127 between rule 25 and token POR resolved as reduce.
Conflict in state 127 between rule 25 and token PAND resolved as reduce.
Conflict in state 127 between rule 25 and token PLUSAS resolved as reduce.
Conflict in state 127 between rule 25 and token MINUSAS resolved as reduce.
Conflict in state 127 between rule 25 and token MULTAS resolved as reduce.
Conflict in state 127 between rule 25 and token DIVAS resolved as reduce.
Conflict in state 127 between rule 25 and token MODAS resolved as reduce.
Conflict in state 127 between rule 25 and token INC resolved as shift.
Conflict in state 127 between rule 25 and token DEC resolved as shift.
Conflict in state 127 between rule 25 and token EQ resolved as shift.
Conflict in state 127 between rule 25 and token NEQ resolved as shift.
Conflict in state 127 between rule 25 and token GEQ resolved as shift.
Conflict in state 127 between rule 25 and token LEQ resolved as shift.
Conflict in state 127 between rule 25 and token TEQ resolved as shift.
Conflict in state 127 between rule 25 and token TNEQ resolved as shift.
Conflict in state 127 between rule 25 and token '=' resolved as reduce.
Conflict in state 127 between rule 25 and token '>' resolved as shift.
Conflict in state 127 between rule 25 and token '<' resolved as shift.
Conflict in state 127 between rule 25 and token '+' resolved as shift.
Conflict in state 127 between rule 25 and token '-' resolved as shift.
Conflict in state 127 between rule 25 and token '*' resolved as shift.
Conflict in state 127 between rule 25 and token '/' resolved as shift.
Conflict in state 127 between rule 25 and token '%' resolved as shift.
Conflict in state 128 between rule 26 and token COR resolved as reduce.
Conflict in state 128 between rule 26 and token CAND resolved as reduce.
Conflict in state 128 between rule 26 and token POR resolved as reduce.
Conflict in state 128 between rule 26 and token PAND resolved as reduce.
Conflict in state 128 between rule 26 and token PLUSAS resolved as reduce.
Conflict in state 128 between rule 26 and token MINUSAS resolved as reduce.
Conflict in state 128 between rule 26 and token MULTAS resolved as reduce.
Conflict in state 128 between rule 26 and token DIVAS resolved as reduce.
Conflict in state 128 between rule 26 and token MODAS resolved as reduce.
Conflict in state 128 between rule 26 and token INC resolved as shift.
Conflict in state 128 between rule 26 and token DEC resolved as shift.
Conflict in state 128 between rule 26 and token EQ resolved as shift.
Conflict in state 128 between rule 26 and token NEQ resolved as shift.
Conflict in state 128 between rule 26 and token GEQ resolved as shift.
Conflict in state 128 between rule 26 and token LEQ resolved as shift.
Conflict in state 128 between rule 26 and token TEQ resolved as shift.
Conflict in state 128 between rule 26 and token TNEQ resolved as shift.
Conflict in state 128 between rule 26 and token '=' resolved as reduce.
Conflict in state 128 between rule 26 and token '>' resolved as shift.
Conflict in state 128 between rule 26 and token '<' resolved as shift.
Conflict in state 128 between rule 26 and token '+' resolved as shift.
Conflict in state 128 between rule 26 and token '-' resolved as shift.
Conflict in state 128 between rule 26 and token '*' resolved as shift.
Conflict in state 128 between rule 26 and token '/' resolved as shift.
Conflict in state 128 between rule 26 and token '%' resolved as shift.
Conflict in state 129 between rule 27 and token COR resolved as reduce.
Conflict in state 129 between rule 27 and token CAND resolved as reduce.
Conflict in state 129 between rule 27 and token POR resolved as reduce.
Conflict in state 129 between rule 27 and token PAND resolved as reduce.
Conflict in state 129 between rule 27 and token PLUSAS resolved as reduce.
Conflict in state 129 between rule 27 and token MINUSAS resolved as reduce.
Conflict in state 129 between rule 27 and token MULTAS resolved as reduce.
Conflict in state 129 between rule 27 and token DIVAS resolved as reduce.
Conflict in state 129 between rule 27 and token MODAS resolved as reduce.
Conflict in state 129 between rule 27 and token INC resolved as shift.
Conflict in state 129 between rule 27 and token DEC resolved as shift.
Conflict in state 129 between rule 27 and token EQ resolved as shift.
Conflict in state 129 between rule 27 and token NEQ resolved as shift.
Conflict in state 129 between rule 27 and token GEQ resolved as shift.
Conflict in state 129 between rule 27 and token LEQ resolved as shift.
Conflict in state 129 between rule 27 and token TEQ resolved as shift.
Conflict in state 129 between rule 27 and token TNEQ resolved as shift.
Conflict in state 129 between rule 27 and token '=' resolved as reduce.
Conflict in state 129 between rule 27 and token '>' resolved as shift.
Conflict in state 129 between rule 27 and token '<' resolved as shift.
Conflict in state 129 between rule 27 and token '+' resolved as shift.
Conflict in state 129 between rule 27 and token '-' resolved as shift.
Conflict in state 129 between rule 27 and token '*' resolved as shift.
Conflict in state 129 between rule 27 and token '/' resolved as shift.
Conflict in state 129 between rule 27 and token '%' resolved as shift.
Conflict in state 130 between rule 36 and token COR resolved as shift.
Conflict in state 130 between rule 36 and token CAND resolved as shift.
Conflict in state 130 between rule 36 and token POR resolved as shift.
Conflict in state 130 between rule 36 and token PAND resolved as shift.
Conflict in state 130 between rule 36 and token PLUSAS resolved as shift.
Conflict in state 130 between rule 36 and token MINUSAS resolved as shift.
Conflict in state 130 between rule 36 and token MULTAS resolved as shift.
Conflict in state 130 between rule 36 and token DIVAS resolved as shift.
Conflict in state 130 between rule 36 and token MODAS resolved as shift.
Conflict in state 130 between rule 36 and token INC resolved as shift.
Conflict in state 130 between rule 36 and token DEC resolved as shift.
Conflict in state 130 between rule 36 and token EQ resolved as shift.
Conflict in state 130 between rule 36 and token NEQ resolved as shift.
Conflict in state 130 between rule 36 and token GEQ resolved as shift.
Conflict in state 130 between rule 36 and token LEQ resolved as shift.
Conflict in state 130 between rule 36 and token TEQ resolved as shift.
Conflict in state 130 between rule 36 and token TNEQ resolved as shift.
Conflict in state 130 between rule 36 and token '=' resolved as shift.
Conflict in state 130 between rule 36 and token '>' resolved as shift.
Conflict in state 130 between rule 36 and token '<' resolved as shift.
Conflict in state 130 between rule 36 and token '+' resolved as shift.
Conflict in state 130 between rule 36 and token '-' resolved as shift.
Conflict in state 130 between rule 36 and token '*' resolved as shift.
Conflict in state 130 between rule 36 and token '/' resolved as shift.
Conflict in state 130 between rule 36 and token '%' resolved as shift.
Conflict in state 131 between rule 37 and token COR resolved as shift.
Conflict in state 131 between rule 37 and token CAND resolved as shift.
Conflict in state 131 between rule 37 and token POR resolved as shift.
Conflict in state 131 between rule 37 and token PAND resolved as shift.
Conflict in state 131 between rule 37 and token PLUSAS resolved as shift.
Conflict in state 131 between rule 37 and token MINUSAS resolved as shift.
Conflict in state 131 between rule 37 and token MULTAS resolved as shift.
Conflict in state 131 between rule 37 and token DIVAS resolved as shift.
Conflict in state 131 between rule 37 and token MODAS resolved as shift.
Conflict in state 131 between rule 37 and token INC resolved as shift.
Conflict in state 131 between rule 37 and token DEC resolved as shift.
Conflict in state 131 between rule 37 and token EQ resolved as shift.
Conflict in state 131 between rule 37 and token NEQ resolved as shift.
Conflict in state 131 between rule 37 and token GEQ resolved as shift.
Conflict in state 131 between rule 37 and token LEQ resolved as shift.
Conflict in state 131 between rule 37 and token TEQ resolved as shift.
Conflict in state 131 between rule 37 and token TNEQ resolved as shift.
Conflict in state 131 between rule 37 and token '=' resolved as shift.
Conflict in state 131 between rule 37 and token '>' resolved as shift.
Conflict in state 131 between rule 37 and token '<' resolved as shift.
Conflict in state 131 between rule 37 and token '+' resolved as shift.
Conflict in state 131 between rule 37 and token '-' resolved as shift.
Conflict in state 131 between rule 37 and token '*' resolved as shift.
Conflict in state 131 between rule 37 and token '/' resolved as shift.
Conflict in state 131 between rule 37 and token '%' resolved as shift.
Conflict in state 132 between rule 38 and token COR resolved as shift.
Conflict in state 132 between rule 38 and token CAND resolved as shift.
Conflict in state 132 between rule 38 and token POR resolved as shift.
Conflict in state 132 between rule 38 and token PAND resolved as shift.
Conflict in state 132 between rule 38 and token PLUSAS resolved as shift.
Conflict in state 132 between rule 38 and token MINUSAS resolved as shift.
Conflict in state 132 between rule 38 and token MULTAS resolved as shift.
Conflict in state 132 between rule 38 and token DIVAS resolved as shift.
Conflict in state 132 between rule 38 and token MODAS resolved as shift.
Conflict in state 132 between rule 38 and token INC resolved as shift.
Conflict in state 132 between rule 38 and token DEC resolved as shift.
Conflict in state 132 between rule 38 and token EQ resolved as shift.
Conflict in state 132 between rule 38 and token NEQ resolved as shift.
Conflict in state 132 between rule 38 and token GEQ resolved as shift.
Conflict in state 132 between rule 38 and token LEQ resolved as shift.
Conflict in state 132 between rule 38 and token TEQ resolved as shift.
Conflict in state 132 between rule 38 and token TNEQ resolved as shift.
Conflict in state 132 between rule 38 and token '=' resolved as shift.
Conflict in state 132 between rule 38 and token '>' resolved as shift.
Conflict in state 132 between rule 38 and token '<' resolved as shift.
Conflict in state 132 between rule 38 and token '+' resolved as shift.
Conflict in state 132 between rule 38 and token '-' resolved as shift.
Conflict in state 132 between rule 38 and token '*' resolved as shift.
Conflict in state 132 between rule 38 and token '/' resolved as shift.
Conflict in state 132 between rule 38 and token '%' resolved as shift.
Conflict in state 133 between rule 39 and token COR resolved as shift.
Conflict in state 133 between rule 39 and token CAND resolved as shift.
Conflict in state 133 between rule 39 and token POR resolved as shift.
Conflict in state 133 between rule 39 and token PAND resolved as shift.
Conflict in state 133 between rule 39 and token PLUSAS resolved as shift.
Conflict in state 133 between rule 39 and token MINUSAS resolved as shift.
Conflict in state 133 between rule 39 and token MULTAS resolved as shift.
Conflict in state 133 between rule 39 and token DIVAS resolved as shift.
Conflict in state 133 between rule 39 and token MODAS resolved as shift.
Conflict in state 133 between rule 39 and token INC resolved as shift.
Conflict in state 133 between rule 39 and token DEC resolved as shift.
Conflict in state 133 between rule 39 and token EQ resolved as shift.
Conflict in state 133 between rule 39 and token NEQ resolved as shift.
Conflict in state 133 between rule 39 and token GEQ resolved as shift.
Conflict in state 133 between rule 39 and token LEQ resolved as shift.
Conflict in state 133 between rule 39 and token TEQ resolved as shift.
Conflict in state 133 between rule 39 and token TNEQ resolved as shift.
Conflict in state 133 between rule 39 and token '=' resolved as shift.
Conflict in state 133 between rule 39 and token '>' resolved as shift.
Conflict in state 133 between rule 39 and token '<' resolved as shift.
Conflict in state 133 between rule 39 and token '+' resolved as shift.
Conflict in state 133 between rule 39 and token '-' resolved as shift.
Conflict in state 133 between rule 39 and token '*' resolved as shift.
Conflict in state 133 between rule 39 and token '/' resolved as shift.
Conflict in state 133 between rule 39 and token '%' resolved as shift.
Conflict in state 134 between rule 40 and token COR resolved as shift.
Conflict in state 134 between rule 40 and token CAND resolved as shift.
Conflict in state 134 between rule 40 and token POR resolved as shift.
Conflict in state 134 between rule 40 and token PAND resolved as shift.
Conflict in state 134 between rule 40 and token PLUSAS resolved as shift.
Conflict in state 134 between rule 40 and token MINUSAS resolved as shift.
Conflict in state 134 between rule 40 and token MULTAS resolved as shift.
Conflict in state 134 between rule 40 and token DIVAS resolved as shift.
Conflict in state 134 between rule 40 and token MODAS resolved as shift.
Conflict in state 134 between rule 40 and token INC resolved as shift.
Conflict in state 134 between rule 40 and token DEC resolved as shift.
Conflict in state 134 between rule 40 and token EQ resolved as shift.
Conflict in state 134 between rule 40 and token NEQ resolved as shift.
Conflict in state 134 between rule 40 and token GEQ resolved as shift.
Conflict in state 134 between rule 40 and token LEQ resolved as shift.
Conflict in state 134 between rule 40 and token TEQ resolved as shift.
Conflict in state 134 between rule 40 and token TNEQ resolved as shift.
Conflict in state 134 between rule 40 and token '=' resolved as shift.
Conflict in state 134 between rule 40 and token '>' resolved as shift.
Conflict in state 134 between rule 40 and token '<' resolved as shift.
Conflict in state 134 between rule 40 and token '+' resolved as shift.
Conflict in state 134 between rule 40 and token '-' resolved as shift.
Conflict in state 134 between rule 40 and token '*' resolved as shift.
Conflict in state 134 between rule 40 and token '/' resolved as shift.
Conflict in state 134 between rule 40 and token '%' resolved as shift.
Conflict in state 135 between rule 19 and token COR resolved as reduce.
Conflict in state 135 between rule 19 and token CAND resolved as reduce.
Conflict in state 135 between rule 19 and token POR resolved as reduce.
Conflict in state 135 between rule 19 and token PAND resolved as reduce.
Conflict in state 135 between rule 19 and token PLUSAS resolved as reduce.
Conflict in state 135 between rule 19 and token MINUSAS resolved as reduce.
Conflict in state 135 between rule 19 and token MULTAS resolved as reduce.
Conflict in state 135 between rule 19 and token DIVAS resolved as reduce.
Conflict in state 135 between rule 19 and token MODAS resolved as reduce.
Conflict in state 135 between rule 19 and token INC resolved as shift.
Conflict in state 135 between rule 19 and token DEC resolved as shift.
Conflict in state 135 between rule 19 and token EQ resolved as an error.
Conflict in state 135 between rule 19 and token NEQ resolved as an error.
Conflict in state 135 between rule 19 and token GEQ resolved as shift.
Conflict in state 135 between rule 19 and token LEQ resolved as shift.
Conflict in state 135 between rule 19 and token TEQ resolved as an error.
Conflict in state 135 between rule 19 and token TNEQ resolved as an error.
Conflict in state 135 between rule 19 and token '=' resolved as reduce.
Conflict in state 135 between rule 19 and token '>' resolved as shift.
Conflict in state 135 between rule 19 and token '<' resolved as shift.
Conflict in state 135 between rule 19 and token '+' resolved as shift.
Conflict in state 135 between rule 19 and token '-' resolved as shift.
Conflict in state 135 between rule 19 and token '*' resolved as shift.
Conflict in state 135 between rule 19 and token '/' resolved as shift.
Conflict in state 135 between rule 19 and token '%' resolved as shift.
Conflict in state 136 between rule 20 and token COR resolved as reduce.
Conflict in state 136 between rule 20 and token CAND resolved as reduce.
Conflict in state 136 between rule 20 and token POR resolved as reduce.
Conflict in state 136 between rule 20 and token PAND resolved as reduce.
Conflict in state 136 between rule 20 and token PLUSAS resolved as reduce.
Conflict in state 136 between rule 20 and token MINUSAS resolved as reduce.
Conflict in state 136 between rule 20 and token MULTAS resolved as reduce.
Conflict in state 136 between rule 20 and token DIVAS resolved as reduce.
Conflict in state 136 between rule 20 and token MODAS resolved as reduce.
Conflict in state 136 between rule 20 and token INC resolved as shift.
Conflict in state 136 between rule 20 and token DEC resolved as shift.
Conflict in state 136 between rule 20 and token EQ resolved as an error.
Conflict in state 136 between rule 20 and token NEQ resolved as an error.
Conflict in state 136 between rule 20 and token GEQ resolved as shift.
Conflict in state 136 between rule 20 and token LEQ resolved as shift.
Conflict in state 136 between rule 20 and token TEQ resolved as an error.
Conflict in state 136 between rule 20 and token TNEQ resolved as an error.
Conflict in state 136 between rule 20 and token '=' resolved as reduce.
Conflict in state 136 between rule 20 and token '>' resolved as shift.
Conflict in state 136 between rule 20 and token '<' resolved as shift.
Conflict in state 136 between rule 20 and token '+' resolved as shift.
Conflict in state 136 between rule 20 and token '-' resolved as shift.
Conflict in state 136 between rule 20 and token '*' resolved as shift.
Conflict in state 136 between rule 20 and token '/' resolved as shift.
Conflict in state 136 between rule 20 and token '%' resolved as shift.
Conflict in state 137 between rule 18 and token COR resolved as reduce.
Conflict in state 137 between rule 18 and token CAND resolved as reduce.
Conflict in state 137 between rule 18 and token POR resolved as reduce.
Conflict in state 137 between rule 18 and token PAND resolved as reduce.
Conflict in state 137 between rule 18 and token PLUSAS resolved as reduce.
Conflict in state 137 between rule 18 and token MINUSAS resolved as reduce.
Conflict in state 137 between rule 18 and token MULTAS resolved as reduce.
Conflict in state 137 between rule 18 and token DIVAS resolved as reduce.
Conflict in state 137 between rule 18 and token MODAS resolved as reduce.
Conflict in state 137 between rule 18 and token INC resolved as shift.
Conflict in state 137 between rule 18 and token DEC resolved as shift.
Conflict in state 137 between rule 18 and token EQ resolved as reduce.
Conflict in state 137 between rule 18 and token NEQ resolved as reduce.
Conflict in state 137 between rule 18 and token GEQ resolved as an error.
Conflict in state 137 between rule 18 and token LEQ resolved as an error.
Conflict in state 137 between rule 18 and token TEQ resolved as reduce.
Conflict in state 137 between rule 18 and token TNEQ resolved as reduce.
Conflict in state 137 between rule 18 and token '=' resolved as reduce.
Conflict in state 137 between rule 18 and token '>' resolved as an error.
Conflict in state 137 between rule 18 and token '<' resolved as an error.
Conflict in state 137 between rule 18 and token '+' resolved as shift.
Conflict in state 137 between rule 18 and token '-' resolved as shift.
Conflict in state 137 between rule 18 and token '*' resolved as shift.
Conflict in state 137 between rule 18 and token '/' resolved as shift.
Conflict in state 137 between rule 18 and token '%' resolved as shift.
Conflict in state 138 between rule 16 and token COR resolved as reduce.
Conflict in state 138 between rule 16 and token CAND resolved as reduce.
Conflict in state 138 between rule 16 and token POR resolved as reduce.
Conflict in state 138 between rule 16 and token PAND resolved as reduce.
Conflict in state 138 between rule 16 and token PLUSAS resolved as reduce.
Conflict in state 138 between rule 16 and token MINUSAS resolved as reduce.
Conflict in state 138 between rule 16 and token MULTAS resolved as reduce.
Conflict in state 138 between rule 16 and token DIVAS resolved as reduce.
Conflict in state 138 between rule 16 and token MODAS resolved as reduce.
Conflict in state 138 between rule 16 and token INC resolved as shift.
Conflict in state 138 between rule 16 and token DEC resolved as shift.
Conflict in state 138 between rule 16 and token EQ resolved as reduce.
Conflict in state 138 between rule 16 and token NEQ resolved as reduce.
Conflict in state 138 between rule 16 and token GEQ resolved as an error.
Conflict in state 138 between rule 16 and token LEQ resolved as an error.
Conflict in state 138 between rule 16 and token TEQ resolved as reduce.
Conflict in state 138 between rule 16 and token TNEQ resolved as reduce.
Conflict in state 138 between rule 16 and token '=' resolved as reduce.
Conflict in state 138 between rule 16 and token '>' resolved as an error.
Conflict in state 138 between rule 16 and token '<' resolved as an error.
Conflict in state 138 between rule 16 and token '+' resolved as shift.
Conflict in state 138 between rule 16 and token '-' resolved as shift.
Conflict in state 138 between rule 16 and token '*' resolved as shift.
Conflict in state 138 between rule 16 and token '/' resolved as shift.
Conflict in state 138 between rule 16 and token '%' resolved as shift.
Conflict in state 139 between rule 21 and token COR resolved as reduce.
Conflict in state 139 between rule 21 and token CAND resolved as reduce.
Conflict in state 139 between rule 21 and token POR resolved as reduce.
Conflict in state 139 between rule 21 and token PAND resolved as reduce.
Conflict in state 139 between rule 21 and token PLUSAS resolved as reduce.
Conflict in state 139 between rule 21 and token MINUSAS resolved as reduce.
Conflict in state 139 between rule 21 and token MULTAS resolved as reduce.
Conflict in state 139 between rule 21 and token DIVAS resolved as reduce.
Conflict in state 139 between rule 21 and token MODAS resolved as reduce.
Conflict in state 139 between rule 21 and token INC resolved as shift.
Conflict in state 139 between rule 21 and token DEC resolved as shift.
Conflict in state 139 between rule 21 and token EQ resolved as an error.
Conflict in state 139 between rule 21 and token NEQ resolved as an error.
Conflict in state 139 between rule 21 and token GEQ resolved as shift.
Conflict in state 139 between rule 21 and token LEQ resolved as shift.
Conflict in state 139 between rule 21 and token TEQ resolved as an error.
Conflict in state 139 between rule 21 and token TNEQ resolved as an error.
Conflict in state 139 between rule 21 and token '=' resolved as reduce.
Conflict in state 139 between rule 21 and token '>' resolved as shift.
Conflict in state 139 between rule 21 and token '<' resolved as shift.
Conflict in state 139 between rule 21 and token '+' resolved as shift.
Conflict in state 139 between rule 21 and token '-' resolved as shift.
Conflict in state 139 between rule 21 and token '*' resolved as shift.
Conflict in state 139 between rule 21 and token '/' resolved as shift.
Conflict in state 139 between rule 21 and token '%' resolved as shift.
Conflict in state 140 between rule 22 and token COR resolved as reduce.
Conflict in state 140 between rule 22 and token CAND resolved as reduce.
Conflict in state 140 between rule 22 and token POR resolved as reduce.
Conflict in state 140 between rule 22 and token PAND resolved as reduce.
Conflict in state 140 between rule 22 and token PLUSAS resolved as reduce.
Conflict in state 140 between rule 22 and token MINUSAS resolved as reduce.
Conflict in state 140 between rule 22 and token MULTAS resolved as reduce.
Conflict in state 140 between rule 22 and token DIVAS resolved as reduce.
Conflict in state 140 between rule 22 and token MODAS resolved as reduce.
Conflict in state 140 between rule 22 and token INC resolved as shift.
Conflict in state 140 between rule 22 and token DEC resolved as shift.
Conflict in state 140 between rule 22 and token EQ resolved as an error.
Conflict in state 140 between rule 22 and token NEQ resolved as an error.
Conflict in state 140 between rule 22 and token GEQ resolved as shift.
Conflict in state 140 between rule 22 and token LEQ resolved as shift.
Conflict in state 140 between rule 22 and token TEQ resolved as an error.
Conflict in state 140 between rule 22 and token TNEQ resolved as an error.
Conflict in state 140 between rule 22 and token '=' resolved as reduce.
Conflict in state 140 between rule 22 and token '>' resolved as shift.
Conflict in state 140 between rule 22 and token '<' resolved as shift.
Conflict in state 140 between rule 22 and token '+' resolved as shift.
Conflict in state 140 between rule 22 and token '-' resolved as shift.
Conflict in state 140 between rule 22 and token '*' resolved as shift.
Conflict in state 140 between rule 22 and token '/' resolved as shift.
Conflict in state 140 between rule 22 and token '%' resolved as shift.
Conflict in state 141 between rule 35 and token COR resolved as shift.
Conflict in state 141 between rule 35 and token CAND resolved as shift.
Conflict in state 141 between rule 35 and token POR resolved as shift.
Conflict in state 141 between rule 35 and token PAND resolved as shift.
Conflict in state 141 between rule 35 and token PLUSAS resolved as shift.
Conflict in state 141 between rule 35 and token MINUSAS resolved as shift.
Conflict in state 141 between rule 35 and token MULTAS resolved as shift.
Conflict in state 141 between rule 35 and token DIVAS resolved as shift.
Conflict in state 141 between rule 35 and token MODAS resolved as shift.
Conflict in state 141 between rule 35 and token INC resolved as shift.
Conflict in state 141 between rule 35 and token DEC resolved as shift.
Conflict in state 141 between rule 35 and token EQ resolved as shift.
Conflict in state 141 between rule 35 and token NEQ resolved as shift.
Conflict in state 141 between rule 35 and token GEQ resolved as shift.
Conflict in state 141 between rule 35 and token LEQ resolved as shift.
Conflict in state 141 between rule 35 and token TEQ resolved as shift.
Conflict in state 141 between rule 35 and token TNEQ resolved as shift.
Conflict in state 141 between rule 35 and token '=' resolved as shift.
Conflict in state 141 between rule 35 and token '>' resolved as shift.
Conflict in state 141 between rule 35 and token '<' resolved as shift.
Conflict in state 141 between rule 35 and token '+' resolved as shift.
Conflict in state 141 between rule 35 and token '-' resolved as shift.
Conflict in state 141 between rule 35 and token '*' resolved as shift.
Conflict in state 141 between rule 35 and token '/' resolved as shift.
Conflict in state 141 between rule 35 and token '%' resolved as shift.
Conflict in state 142 between rule 17 and token COR resolved as reduce.
Conflict in state 142 between rule 17 and token CAND resolved as reduce.
Conflict in state 142 between rule 17 and token POR resolved as reduce.
Conflict in state 142 between rule 17 and token PAND resolved as reduce.
Conflict in state 142 between rule 17 and token PLUSAS resolved as reduce.
Conflict in state 142 between rule 17 and token MINUSAS resolved as reduce.
Conflict in state 142 between rule 17 and token MULTAS resolved as reduce.
Conflict in state 142 between rule 17 and token DIVAS resolved as reduce.
Conflict in state 142 between rule 17 and token MODAS resolved as reduce.
Conflict in state 142 between rule 17 and token INC resolved as shift.
Conflict in state 142 between rule 17 and token DEC resolved as shift.
Conflict in state 142 between rule 17 and token EQ resolved as reduce.
Conflict in state 142 between rule 17 and token NEQ resolved as reduce.
Conflict in state 142 between rule 17 and token GEQ resolved as an error.
Conflict in state 142 between rule 17 and token LEQ resolved as an error.
Conflict in state 142 between rule 17 and token TEQ resolved as reduce.
Conflict in state 142 between rule 17 and token TNEQ resolved as reduce.
Conflict in state 142 between rule 17 and token '=' resolved as reduce.
Conflict in state 142 between rule 17 and token '>' resolved as an error.
Conflict in state 142 between rule 17 and token '<' resolved as an error.
Conflict in state 142 between rule 17 and token '+' resolved as shift.
Conflict in state 142 between rule 17 and token '-' resolved as shift.
Conflict in state 142 between rule 17 and token '*' resolved as shift.
Conflict in state 142 between rule 17 and token '/' resolved as shift.
Conflict in state 142 between rule 17 and token '%' resolved as shift.
Conflict in state 143 between rule 15 and token COR resolved as reduce.
Conflict in state 143 between rule 15 and token CAND resolved as reduce.
Conflict in state 143 between rule 15 and token POR resolved as reduce.
Conflict in state 143 between rule 15 and token PAND resolved as reduce.
Conflict in state 143 between rule 15 and token PLUSAS resolved as reduce.
Conflict in state 143 between rule 15 and token MINUSAS resolved as reduce.
Conflict in state 143 between rule 15 and token MULTAS resolved as reduce.
Conflict in state 143 between rule 15 and token DIVAS resolved as reduce.
Conflict in state 143 between rule 15 and token MODAS resolved as reduce.
Conflict in state 143 between rule 15 and token INC resolved as shift.
Conflict in state 143 between rule 15 and token DEC resolved as shift.
Conflict in state 143 between rule 15 and token EQ resolved as reduce.
Conflict in state 143 between rule 15 and token NEQ resolved as reduce.
Conflict in state 143 between rule 15 and token GEQ resolved as an error.
Conflict in state 143 between rule 15 and token LEQ resolved as an error.
Conflict in state 143 between rule 15 and token TEQ resolved as reduce.
Conflict in state 143 between rule 15 and token TNEQ resolved as reduce.
Conflict in state 143 between rule 15 and token '=' resolved as reduce.
Conflict in state 143 between rule 15 and token '>' resolved as an error.
Conflict in state 143 between rule 15 and token '<' resolved as an error.
Conflict in state 143 between rule 15 and token '+' resolved as shift.
Conflict in state 143 between rule 15 and token '-' resolved as shift.
Conflict in state 143 between rule 15 and token '*' resolved as shift.
Conflict in state 143 between rule 15 and token '/' resolved as shift.
Conflict in state 143 between rule 15 and token '%' resolved as shift.
Conflict in state 144 between rule 28 and token COR resolved as reduce.
Conflict in state 144 between rule 28 and token CAND resolved as reduce.
Conflict in state 144 between rule 28 and token POR resolved as reduce.
Conflict in state 144 between rule 28 and token PAND resolved as reduce.
Conflict in state 144 between rule 28 and token PLUSAS resolved as reduce.
Conflict in state 144 between rule 28 and token MINUSAS resolved as reduce.
Conflict in state 144 between rule 28 and token MULTAS resolved as reduce.
Conflict in state 144 between rule 28 and token DIVAS resolved as reduce.
Conflict in state 144 between rule 28 and token MODAS resolved as reduce.
Conflict in state 144 between rule 28 and token INC resolved as shift.
Conflict in state 144 between rule 28 and token DEC resolved as shift.
Conflict in state 144 between rule 28 and token EQ resolved as reduce.
Conflict in state 144 between rule 28 and token NEQ resolved as reduce.
Conflict in state 144 between rule 28 and token GEQ resolved as reduce.
Conflict in state 144 between rule 28 and token LEQ resolved as reduce.
Conflict in state 144 between rule 28 and token TEQ resolved as reduce.
Conflict in state 144 between rule 28 and token TNEQ resolved as reduce.
Conflict in state 144 between rule 28 and token '=' resolved as reduce.
Conflict in state 144 between rule 28 and token '>' resolved as reduce.
Conflict in state 144 between rule 28 and token '<' resolved as reduce.
Conflict in state 144 between rule 28 and token '+' resolved as reduce.
Conflict in state 144 between rule 28 and token '-' resolved as reduce.
Conflict in state 144 between rule 28 and token '*' resolved as shift.
Conflict in state 144 between rule 28 and token '/' resolved as shift.
Conflict in state 144 between rule 28 and token '%' resolved as shift.
Conflict in state 145 between rule 29 and token COR resolved as reduce.
Conflict in state 145 between rule 29 and token CAND resolved as reduce.
Conflict in state 145 between rule 29 and token POR resolved as reduce.
Conflict in state 145 between rule 29 and token PAND resolved as reduce.
Conflict in state 145 between rule 29 and token PLUSAS resolved as reduce.
Conflict in state 145 between rule 29 and token MINUSAS resolved as reduce.
Conflict in state 145 between rule 29 and token MULTAS resolved as reduce.
Conflict in state 145 between rule 29 and token DIVAS resolved as reduce.
Conflict in state 145 between rule 29 and token MODAS resolved as reduce.
Conflict in state 145 between rule 29 and token INC resolved as shift.
Conflict in state 145 between rule 29 and token DEC resolved as shift.
Conflict in state 145 between rule 29 and token EQ resolved as reduce.
Conflict in state 145 between rule 29 and token NEQ resolved as reduce.
Conflict in state 145 between rule 29 and token GEQ resolved as reduce.
Conflict in state 145 between rule 29 and token LEQ resolved as reduce.
Conflict in state 145 between rule 29 and token TEQ resolved as reduce.
Conflict in state 145 between rule 29 and token TNEQ resolved as reduce.
Conflict in state 145 between rule 29 and token '=' resolved as reduce.
Conflict in state 145 between rule 29 and token '>' resolved as reduce.
Conflict in state 145 between rule 29 and token '<' resolved as reduce.
Conflict in state 145 between rule 29 and token '+' resolved as reduce.
Conflict in state 145 between rule 29 and token '-' resolved as reduce.
Conflict in state 145 between rule 29 and token '*' resolved as shift.
Conflict in state 145 between rule 29 and token '/' resolved as shift.
Conflict in state 145 between rule 29 and token '%' resolved as shift.
Conflict in state 146 between rule 30 and token COR resolved as reduce.
Conflict in state 146 between rule 30 and token CAND resolved as reduce.
Conflict in state 146 between rule 30 and token POR resolved as reduce.
Conflict in state 146 between rule 30 and token PAND resolved as reduce.
Conflict in state 146 between rule 30 and token PLUSAS resolved as reduce.
Conflict in state 146 between rule 30 and token MINUSAS resolved as reduce.
Conflict in state 146 between rule 30 and token MULTAS resolved as reduce.
Conflict in state 146 between rule 30 and token DIVAS resolved as reduce.
Conflict in state 146 between rule 30 and token MODAS resolved as reduce.
Conflict in state 146 between rule 30 and token INC resolved as shift.
Conflict in state 146 between rule 30 and token DEC resolved as shift.
Conflict in state 146 between rule 30 and token EQ resolved as reduce.
Conflict in state 146 between rule 30 and token NEQ resolved as reduce.
Conflict in state 146 between rule 30 and token GEQ resolved as reduce.
Conflict in state 146 between rule 30 and token LEQ resolved as reduce.
Conflict in state 146 between rule 30 and token TEQ resolved as reduce.
Conflict in state 146 between rule 30 and token TNEQ resolved as reduce.
Conflict in state 146 between rule 30 and token '=' resolved as reduce.
Conflict in state 146 between rule 30 and token '>' resolved as reduce.
Conflict in state 146 between rule 30 and token '<' resolved as reduce.
Conflict in state 146 between rule 30 and token '+' resolved as reduce.
Conflict in state 146 between rule 30 and token '-' resolved as reduce.
Conflict in state 146 between rule 30 and token '*' resolved as reduce.
Conflict in state 146 between rule 30 and token '/' resolved as reduce.
Conflict in state 146 between rule 30 and token '%' resolved as reduce.
Conflict in state 147 between rule 31 and token COR resolved as reduce.
Conflict in state 147 between rule 31 and token CAND resolved as reduce.
Conflict in state 147 between rule 31 and token POR resolved as reduce.
Conflict in state 147 between rule 31 and token PAND resolved as reduce.
Conflict in state 147 between rule 31 and token PLUSAS resolved as reduce.
Conflict in state 147 between rule 31 and token MINUSAS resolved as reduce.
Conflict in state 147 between rule 31 and token MULTAS resolved as reduce.
Conflict in state 147 between rule 31 and token DIVAS resolved as reduce.
Conflict in state 147 between rule 31 and token MODAS resolved as reduce.
Conflict in state 147 between rule 31 and token INC resolved as shift.
Conflict in state 147 between rule 31 and token DEC resolved as shift.
Conflict in state 147 between rule 31 and token EQ resolved as reduce.
Conflict in state 147 between rule 31 and token NEQ resolved as reduce.
Conflict in state 147 between rule 31 and token GEQ resolved as reduce.
Conflict in state 147 between rule 31 and token LEQ resolved as reduce.
Conflict in state 147 between rule 31 and token TEQ resolved as reduce.
Conflict in state 147 between rule 31 and token TNEQ resolved as reduce.
Conflict in state 147 between rule 31 and token '=' resolved as reduce.
Conflict in state 147 between rule 31 and token '>' resolved as reduce.
Conflict in state 147 between rule 31 and token '<' resolved as reduce.
Conflict in state 147 between rule 31 and token '+' resolved as reduce.
Conflict in state 147 between rule 31 and token '-' resolved as reduce.
Conflict in state 147 between rule 31 and token '*' resolved as reduce.
Conflict in state 147 between rule 31 and token '/' resolved as reduce.
Conflict in state 147 between rule 31 and token '%' resolved as reduce.
Conflict in state 148 between rule 32 and token COR resolved as reduce.
Conflict in state 148 between rule 32 and token CAND resolved as reduce.
Conflict in state 148 between rule 32 and token POR resolved as reduce.
Conflict in state 148 between rule 32 and token PAND resolved as reduce.
Conflict in state 148 between rule 32 and token PLUSAS resolved as reduce.
Conflict in state 148 between rule 32 and token MINUSAS resolved as reduce.
Conflict in state 148 between rule 32 and token MULTAS resolved as reduce.
Conflict in state 148 between rule 32 and token DIVAS resolved as reduce.
Conflict in state 148 between rule 32 and token MODAS resolved as reduce.
Conflict in state 148 between rule 32 and token INC resolved as shift.
Conflict in state 148 between rule 32 and token DEC resolved as shift.
Conflict in state 148 between rule 32 and token EQ resolved as reduce.
Conflict in state 148 between rule 32 and token NEQ resolved as reduce.
Conflict in state 148 between rule 32 and token GEQ resolved as reduce.
Conflict in state 148 between rule 32 and token LEQ resolved as reduce.
Conflict in state 148 between rule 32 and token TEQ resolved as reduce.
Conflict in state 148 between rule 32 and token TNEQ resolved as reduce.
Conflict in state 148 between rule 32 and token '=' resolved as reduce.
Conflict in state 148 between rule 32 and token '>' resolved as reduce.
Conflict in state 148 between rule 32 and token '<' resolved as reduce.
Conflict in state 148 between rule 32 and token '+' resolved as reduce.
Conflict in state 148 between rule 32 and token '-' resolved as reduce.
Conflict in state 148 between rule 32 and token '*' resolved as reduce.
Conflict in state 148 between rule 32 and token '/' resolved as reduce.
Conflict in state 148 between rule 32 and token '%' resolved as reduce.
State 29 contains 25 shift/reduce conflicts.
State 57 contains 4 shift/reduce conflicts.
State 71 contains 24 shift/reduce conflicts.
State 120 contains 1 shift/reduce conflict.
State 177 contains 2 shift/reduce conflicts.
State 231 contains 24 shift/reduce conflicts.
State 242 contains 2 shift/reduce conflicts.

Grammar
rule 1    program -> program_stmt_list
rule 2    program_stmt_list -> program_stmt
rule 3    program_stmt_list -> program_stmt_list program_stmt
rule 4    program_stmt -> main_stmt_list
rule 5    program_stmt -> HTML
rule 6    main_stmt_list -> main_stmt
rule 7    main_stmt_list -> main_stmt_list main_stmt
rule 8    main_stmt -> class_def
rule 9    main_stmt -> stmt
rule 10   const_value -> INT_CONST
rule 11   const_value -> BOOL_CONST
rule 12   const_value -> CHAR_CONST
rule 13   expr -> const_value
rule 14   expr -> '(' expr ')'
rule 15   expr -> expr '<' expr
rule 16   expr -> expr LEQ expr
rule 17   expr -> expr '>' expr
rule 18   expr -> expr GEQ expr
rule 19   expr -> expr EQ expr
rule 20   expr -> expr NEQ expr
rule 21   expr -> expr TEQ expr
rule 22   expr -> expr TNEQ expr
rule 23   expr -> '!' expr
rule 24   expr -> expr COR expr
rule 25   expr -> expr CAND expr
rule 26   expr -> expr POR expr
rule 27   expr -> expr PAND expr
rule 28   expr -> expr '+' expr
rule 29   expr -> expr '-' expr
rule 30   expr -> expr '*' expr
rule 31   expr -> expr '/' expr
rule 32   expr -> expr '%' expr
rule 33   expr -> '+' expr
rule 34   expr -> '-' expr
rule 35   expr -> expr '=' expr
rule 36   expr -> expr PLUSAS expr
rule 37   expr -> expr MINUSAS expr
rule 38   expr -> expr MULTAS expr
rule 39   expr -> expr DIVAS expr
rule 40   expr -> expr MODAS expr
rule 41   expr -> expr INC
rule 42   expr -> expr DEC
rule 43   expr -> INC expr
rule 44   expr -> DEC expr
rule 45   expr -> variable
rule 46   expr -> string
rule 47   expr -> ARRAY '(' array ')'
rule 48   expr -> ID '(' expr_list ')'
rule 49   expr_list_ne -> expr
rule 50   expr_list_ne -> expr_list_ne ',' expr
rule 51   expr_list ->		/* empty */
rule 52   expr_list -> expr_list_ne
rule 53   expr_e ->		/* empty */
rule 54   expr_e -> expr
rule 55   string -> CHAR_CONST VARNAME_IN_STR CHAR_CONST
rule 56   string -> string VARNAME_IN_STR CHAR_CONST
rule 57   variable_element -> ARROW ID
rule 58   variable_element -> ARROW ID '(' expr_list ')'
rule 59   variable_element -> '[' expr ']'
rule 60   variable_element_list_ne -> variable_element
rule 61   variable_element_list_ne -> variable_element_list_ne variable_element
rule 62   variable_element_list ->		/* empty */
rule 63   variable_element_list -> variable_element_list_ne
rule 64   variable -> VARNAME variable_element_list
rule 65   var_list_element -> VARNAME
rule 66   var_list_element -> VARNAME '=' expr
rule 67   var_list -> var_list_element
rule 68   var_list -> var_list ',' var_list_element
rule 69   array_element -> expr
rule 70   array_element -> expr SETVALUE expr
rule 71   array_ne -> array_element
rule 72   array_ne -> array_ne ',' array_element
rule 73   array ->		/* empty */
rule 74   array -> array_ne
rule 75   if_stmt -> IF '(' expr ')' stmt
rule 76   if_stmt -> IF '(' expr ')' stmt ELSE stmt
rule 77   if_stmt -> IF '(' expr ')' stmt else_if_stmt
rule 78   else_if_stmt -> ELSEIF '(' expr ')' stmt
rule 79   else_if_stmt -> ELSEIF '(' expr ')' stmt ELSE stmt
rule 80   else_if_stmt -> ELSEIF '(' expr ')' stmt else_if_stmt
rule 81   case_stmt -> CASE expr ':' stmt_list
rule 82   case_stmt_list -> case_stmt
rule 83   case_stmt_list -> case_stmt_list case_stmt
rule 84   switch_stmt -> SWITCH '(' expr ')' '{' case_stmt_list '}'
rule 85   switch_stmt -> SWITCH '(' expr ')' '{' case_stmt_list DEFAULT ':' stmt_list
rule 86   for_stmt -> FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
rule 87   do_while_stmt -> DO '{' stmt '}' WHILE '(' expr ')' ';'
rule 88   while_stmt -> WHILE '(' expr ')' stmt
rule 89   foreach_stmt -> FOREACH '(' expr AS VARNAME ')' stmt
rule 90   foreach_stmt -> FOREACH '(' expr AS VARNAME SETVALUE VARNAME ')' stmt
rule 91   stmt -> expr ';'
rule 92   stmt -> if_stmt
rule 93   stmt -> switch_stmt
rule 94   stmt -> for_stmt
rule 95   stmt -> do_while_stmt
rule 96   stmt -> while_stmt
rule 97   stmt -> foreach_stmt
rule 98   stmt -> function_declaration
rule 99   stmt -> ECHO expr
rule 100  stmt -> BREAK ';'
rule 101  stmt -> RETURN expr_e ';'
rule 102  stmt -> '{' stmt_list '}'
rule 103  stmt -> ';'
rule 104  stmt_list_ne -> stmt
rule 105  stmt_list_ne -> stmt_list_ne stmt
rule 106  stmt_list ->		/* empty */
rule 107  stmt_list -> stmt_list_ne
rule 108  function_declaration -> FUNCTION ID '(' var_list ')' '{' stmt_list '}'
rule 109  field_name -> PUBLIC VARNAME
rule 110  field_name -> PRIVATE VARNAME
rule 111  field_name -> PROTECTED VARNAME
rule 112  class_body_element -> field_name ';'
rule 113  class_body_element -> field_name '=' const_value ';'
rule 114  class_body_element -> function_declaration
rule 115  class_body_element -> PUBLIC function_declaration
rule 116  class_body_element -> PRIVATE function_declaration
rule 117  class_body_element -> PROTECTED function_declaration
rule 118  class_body_ne -> class_body_element
rule 119  class_body_ne -> class_body_ne class_body_element
rule 120  class_body ->		/* empty */
rule 121  class_body -> class_body_ne
rule 122  class_def -> CLASS ID '{' class_body '}'
rule 123  class_def -> CLASS ID EXTENDS ID '{' class_body '}'

Terminals, with rules where they appear

$ (-1)
'!' (33) 23
'%' (37) 32
'(' (40) 14 47 48 58 75 76 77 78 79 80 84 85 86 87 88 89 90 108
')' (41) 14 47 48 58 75 76 77 78 79 80 84 85 86 87 88 89 90 108
'*' (42) 30
'+' (43) 28 33
',' (44) 50 68 72
'-' (45) 29 34
'.' (46)
'/' (47) 31
':' (58) 81 85
';' (59) 86 87 91 100 101 103 112 113
'<' (60) 15
'=' (61) 35 66 113
'>' (62) 17
'[' (91) 59
']' (93) 59
'{' (123) 84 85 87 102 108 122 123
'}' (125) 84 87 102 108 122 123
error (256)
INT_CONST (258) 10
BOOL_CONST (259) 11
CHAR_CONST (260) 12 55 56
HTML (261) 5
ARRAY (262) 47
IF (263) 75 76 77
ELSE (264) 76 79
ELSEIF (265) 78 79 80
SWITCH (266) 84 85
CASE (267) 81
BREAK (268) 100
DEFAULT (269) 85
FOR (270) 86
FOREACH (271) 89 90
AS (272) 89 90
DO (273) 87
WHILE (274) 87 88
NEW (275)
CLASS (276) 122 123
THIS (277)
EXTENDS (278) 123
PUBLIC (279) 109 115
PRIVATE (280) 110 116
PROTECTED (281) 111 117
STATIC (282)
PARENT (283)
FUNCTION (284) 108
RETURN (285) 101
ECHO (286) 99
ID (287) 48 57 58 108 122 123
VARNAME (288) 64 65 66 89 90 109 110 111
VARNAME_IN_STR (289) 55 56
SETVALUE (290) 70 90
ARROW (291) 57 58
SCOPEOP (292)
COR (293) 24
CAND (294) 25
POR (295) 26
PAND (296) 27
PLUSAS (297) 36
MINUSAS (298) 37
MULTAS (299) 38
DIVAS (300) 39
MODAS (301) 40
INC (302) 41 43
DEC (303) 42 44
EQ (304) 19
NEQ (305) 20
GEQ (306) 18
LEQ (307) 16
TEQ (308) 21
TNEQ (309) 22
UPLUS (310)
UMINUS (311)

Nonterminals, with rules where they appear

program (76)
    on left: 1
program_stmt_list (77)
    on left: 2 3, on right: 1 3
program_stmt (78)
    on left: 4 5, on right: 2 3
main_stmt_list (79)
    on left: 6 7, on right: 4 7
main_stmt (80)
    on left: 8 9, on right: 6 7
const_value (81)
    on left: 10 11 12, on right: 13 113
expr (82)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48,
    on right: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37 38 39 40 41 42 43 44 49 50 54 59 66 69 70 75
    76 77 78 79 80 81 84 85 87 88 89 90 91 99
expr_list_ne (83)
    on left: 49 50, on right: 50 52
expr_list (84)
    on left: 51 52, on right: 48 58
expr_e (85)
    on left: 53 54, on right: 86 101
string (86)
    on left: 55 56, on right: 46 56
variable_element (87)
    on left: 57 58 59, on right: 60 61
variable_element_list_ne (88)
    on left: 60 61, on right: 61 63
variable_element_list (89)
    on left: 62 63, on right: 64
variable (90)
    on left: 64, on right: 45
var_list_element (91)
    on left: 65 66, on right: 67 68
var_list (92)
    on left: 67 68, on right: 68 108
array_element (93)
    on left: 69 70, on right: 71 72
array_ne (94)
    on left: 71 72, on right: 72 74
array (95)
    on left: 73 74, on right: 47
if_stmt (96)
    on left: 75 76 77, on right: 92
else_if_stmt (97)
    on left: 78 79 80, on right: 77 80
case_stmt (98)
    on left: 81, on right: 82 83
case_stmt_list (99)
    on left: 82 83, on right: 83 84 85
switch_stmt (100)
    on left: 84 85, on right: 93
for_stmt (101)
    on left: 86, on right: 94
do_while_stmt (102)
    on left: 87, on right: 95
while_stmt (103)
    on left: 88, on right: 96
foreach_stmt (104)
    on left: 89 90, on right: 97
stmt (105)
    on left: 91 92 93 94 95 96 97 98 99 100 101 102 103,
    on right: 9 75 76 77 78 79 80 86 87 88 89 90 104 105
stmt_list_ne (106)
    on left: 104 105, on right: 105 107
stmt_list (107)
    on left: 106 107, on right: 81 85 102 108
function_declaration (108)
    on left: 108, on right: 98 114 115 116 117
field_name (109)
    on left: 109 110 111, on right: 112 113
class_body_element (110)
    on left: 112 113 114 115 116 117, on right: 118 119
class_body_ne (111)
    on left: 118 119, on right: 119 121
class_body (112)
    on left: 120 121, on right: 122 123
class_def (113)
    on left: 122 123, on right: 8


state 0

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    HTML	shift, and go to state 4
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    CLASS	shift, and go to state 13
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    program	go to state 246
    program_stmt_list	go to state 27
    program_stmt	go to state 28
    main_stmt_list	go to state 29
    main_stmt	go to state 30
    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 41
    function_declaration	go to state 42
    class_def	go to state 43



state 1

    const_value  ->  INT_CONST .   (rule 10)

    $default	reduce using rule 10 (const_value)



state 2

    const_value  ->  BOOL_CONST .   (rule 11)

    $default	reduce using rule 11 (const_value)



state 3

    const_value  ->  CHAR_CONST .   (rule 12)
    string  ->  CHAR_CONST . VARNAME_IN_STR CHAR_CONST   (rule 55)

    VARNAME_IN_STR	shift, and go to state 44

    $default	reduce using rule 12 (const_value)



state 4

    program_stmt  ->  HTML .   (rule 5)

    $default	reduce using rule 5 (program_stmt)



state 5

    expr  ->  ARRAY . '(' array ')'   (rule 47)

    '(' 	shift, and go to state 45



state 6

    if_stmt  ->  IF . '(' expr ')' stmt   (rule 75)
    if_stmt  ->  IF . '(' expr ')' stmt ELSE stmt   (rule 76)
    if_stmt  ->  IF . '(' expr ')' stmt else_if_stmt   (rule 77)

    '(' 	shift, and go to state 46



state 7

    switch_stmt  ->  SWITCH . '(' expr ')' '{' case_stmt_list '}'   (rule 84)
    switch_stmt  ->  SWITCH . '(' expr ')' '{' case_stmt_list DEFAULT ':' stmt_list   (rule 85)

    '(' 	shift, and go to state 47



state 8

    stmt  ->  BREAK . ';'   (rule 100)

    ';' 	shift, and go to state 48



state 9

    for_stmt  ->  FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt   (rule 86)

    '(' 	shift, and go to state 49



state 10

    foreach_stmt  ->  FOREACH . '(' expr AS VARNAME ')' stmt   (rule 89)
    foreach_stmt  ->  FOREACH . '(' expr AS VARNAME SETVALUE VARNAME ')' stmt   (rule 90)

    '(' 	shift, and go to state 50



state 11

    do_while_stmt  ->  DO . '{' stmt '}' WHILE '(' expr ')' ';'   (rule 87)

    '{' 	shift, and go to state 51



state 12

    while_stmt  ->  WHILE . '(' expr ')' stmt   (rule 88)

    '(' 	shift, and go to state 52



state 13

    class_def  ->  CLASS . ID '{' class_body '}'   (rule 122)
    class_def  ->  CLASS . ID EXTENDS ID '{' class_body '}'   (rule 123)

    ID  	shift, and go to state 53



state 14

    function_declaration  ->  FUNCTION . ID '(' var_list ')' '{' stmt_list '}'   (rule 108)

    ID  	shift, and go to state 54



state 15

    stmt  ->  RETURN . expr_e ';'   (rule 101)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 53 (expr_e)

    const_value	go to state 31
    expr	go to state 55
    expr_e	go to state 56
    string	go to state 33
    variable	go to state 34



state 16

    stmt  ->  ECHO . expr   (rule 99)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 57
    string	go to state 33
    variable	go to state 34



state 17

    expr  ->  ID . '(' expr_list ')'   (rule 48)

    '(' 	shift, and go to state 58



state 18

    variable  ->  VARNAME . variable_element_list   (rule 64)

    ARROW	shift, and go to state 59
    '[' 	shift, and go to state 60

    $default	reduce using rule 62 (variable_element_list)

    variable_element	go to state 61
    variable_element_list_ne	go to state 62
    variable_element_list	go to state 63



state 19

    expr  ->  INC . expr   (rule 43)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 64
    string	go to state 33
    variable	go to state 34



state 20

    expr  ->  DEC . expr   (rule 44)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 65
    string	go to state 33
    variable	go to state 34



state 21

    expr  ->  '+' . expr   (rule 33)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 66
    string	go to state 33
    variable	go to state 34



state 22

    expr  ->  '-' . expr   (rule 34)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 67
    string	go to state 33
    variable	go to state 34



state 23

    expr  ->  '!' . expr   (rule 23)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 68
    string	go to state 33
    variable	go to state 34



state 24

    expr  ->  '(' . expr ')'   (rule 14)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 69
    string	go to state 33
    variable	go to state 34



state 25

    stmt  ->  '{' . stmt_list '}'   (rule 102)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    $default	reduce using rule 106 (stmt_list)

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 70
    stmt_list_ne	go to state 71
    stmt_list	go to state 72
    function_declaration	go to state 42



state 26

    stmt  ->  ';' .   (rule 103)

    $default	reduce using rule 103 (stmt)



state 27

    program  ->  program_stmt_list .   (rule 1)
    program_stmt_list  ->  program_stmt_list . program_stmt   (rule 3)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    HTML	shift, and go to state 4
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    CLASS	shift, and go to state 13
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    $default	reduce using rule 1 (program)

    program_stmt	go to state 73
    main_stmt_list	go to state 29
    main_stmt	go to state 30
    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 41
    function_declaration	go to state 42
    class_def	go to state 43



state 28

    program_stmt_list  ->  program_stmt .   (rule 2)

    $default	reduce using rule 2 (program_stmt_list)



state 29

    program_stmt  ->  main_stmt_list .   (rule 4)
    main_stmt_list  ->  main_stmt_list . main_stmt   (rule 7)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    CLASS	shift, and go to state 13
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    INT_CONST	[reduce using rule 4 (program_stmt)]
    BOOL_CONST	[reduce using rule 4 (program_stmt)]
    CHAR_CONST	[reduce using rule 4 (program_stmt)]
    ARRAY	[reduce using rule 4 (program_stmt)]
    IF  	[reduce using rule 4 (program_stmt)]
    SWITCH	[reduce using rule 4 (program_stmt)]
    BREAK	[reduce using rule 4 (program_stmt)]
    FOR 	[reduce using rule 4 (program_stmt)]
    FOREACH	[reduce using rule 4 (program_stmt)]
    DO  	[reduce using rule 4 (program_stmt)]
    WHILE	[reduce using rule 4 (program_stmt)]
    CLASS	[reduce using rule 4 (program_stmt)]
    FUNCTION	[reduce using rule 4 (program_stmt)]
    RETURN	[reduce using rule 4 (program_stmt)]
    ECHO	[reduce using rule 4 (program_stmt)]
    ID  	[reduce using rule 4 (program_stmt)]
    VARNAME	[reduce using rule 4 (program_stmt)]
    INC 	[reduce using rule 4 (program_stmt)]
    DEC 	[reduce using rule 4 (program_stmt)]
    '+' 	[reduce using rule 4 (program_stmt)]
    '-' 	[reduce using rule 4 (program_stmt)]
    '!' 	[reduce using rule 4 (program_stmt)]
    '(' 	[reduce using rule 4 (program_stmt)]
    '{' 	[reduce using rule 4 (program_stmt)]
    ';' 	[reduce using rule 4 (program_stmt)]
    $default	reduce using rule 4 (program_stmt)

    main_stmt	go to state 74
    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 41
    function_declaration	go to state 42
    class_def	go to state 43



state 30

    main_stmt_list  ->  main_stmt .   (rule 6)

    $default	reduce using rule 6 (main_stmt_list)



state 31

    expr  ->  const_value .   (rule 13)

    $default	reduce using rule 13 (expr)



state 32

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    stmt  ->  expr . ';'   (rule 91)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ';' 	shift, and go to state 100



state 33

    expr  ->  string .   (rule 46)
    string  ->  string . VARNAME_IN_STR CHAR_CONST   (rule 56)

    VARNAME_IN_STR	shift, and go to state 101

    $default	reduce using rule 46 (expr)



state 34

    expr  ->  variable .   (rule 45)

    $default	reduce using rule 45 (expr)



state 35

    stmt  ->  if_stmt .   (rule 92)

    $default	reduce using rule 92 (stmt)



state 36

    stmt  ->  switch_stmt .   (rule 93)

    $default	reduce using rule 93 (stmt)



state 37

    stmt  ->  for_stmt .   (rule 94)

    $default	reduce using rule 94 (stmt)



state 38

    stmt  ->  do_while_stmt .   (rule 95)

    $default	reduce using rule 95 (stmt)



state 39

    stmt  ->  while_stmt .   (rule 96)

    $default	reduce using rule 96 (stmt)



state 40

    stmt  ->  foreach_stmt .   (rule 97)

    $default	reduce using rule 97 (stmt)



state 41

    main_stmt  ->  stmt .   (rule 9)

    $default	reduce using rule 9 (main_stmt)



state 42

    stmt  ->  function_declaration .   (rule 98)

    $default	reduce using rule 98 (stmt)



state 43

    main_stmt  ->  class_def .   (rule 8)

    $default	reduce using rule 8 (main_stmt)



state 44

    string  ->  CHAR_CONST VARNAME_IN_STR . CHAR_CONST   (rule 55)

    CHAR_CONST	shift, and go to state 102



state 45

    expr  ->  ARRAY '(' . array ')'   (rule 47)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 73 (array)

    const_value	go to state 31
    expr	go to state 103
    string	go to state 33
    variable	go to state 34
    array_element	go to state 104
    array_ne	go to state 105
    array	go to state 106



state 46

    if_stmt  ->  IF '(' . expr ')' stmt   (rule 75)
    if_stmt  ->  IF '(' . expr ')' stmt ELSE stmt   (rule 76)
    if_stmt  ->  IF '(' . expr ')' stmt else_if_stmt   (rule 77)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 107
    string	go to state 33
    variable	go to state 34



state 47

    switch_stmt  ->  SWITCH '(' . expr ')' '{' case_stmt_list '}'   (rule 84)
    switch_stmt  ->  SWITCH '(' . expr ')' '{' case_stmt_list DEFAULT ':' stmt_list   (rule 85)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 108
    string	go to state 33
    variable	go to state 34



state 48

    stmt  ->  BREAK ';' .   (rule 100)

    $default	reduce using rule 100 (stmt)



state 49

    for_stmt  ->  FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt   (rule 86)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 53 (expr_e)

    const_value	go to state 31
    expr	go to state 55
    expr_e	go to state 109
    string	go to state 33
    variable	go to state 34



state 50

    foreach_stmt  ->  FOREACH '(' . expr AS VARNAME ')' stmt   (rule 89)
    foreach_stmt  ->  FOREACH '(' . expr AS VARNAME SETVALUE VARNAME ')' stmt   (rule 90)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 110
    string	go to state 33
    variable	go to state 34



state 51

    do_while_stmt  ->  DO '{' . stmt '}' WHILE '(' expr ')' ';'   (rule 87)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 111
    function_declaration	go to state 42



state 52

    while_stmt  ->  WHILE '(' . expr ')' stmt   (rule 88)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 112
    string	go to state 33
    variable	go to state 34



state 53

    class_def  ->  CLASS ID . '{' class_body '}'   (rule 122)
    class_def  ->  CLASS ID . EXTENDS ID '{' class_body '}'   (rule 123)

    EXTENDS	shift, and go to state 113
    '{' 	shift, and go to state 114



state 54

    function_declaration  ->  FUNCTION ID . '(' var_list ')' '{' stmt_list '}'   (rule 108)

    '(' 	shift, and go to state 115



state 55

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    expr_e  ->  expr .   (rule 54)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 54 (expr_e)



state 56

    stmt  ->  RETURN expr_e . ';'   (rule 101)

    ';' 	shift, and go to state 116



state 57

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    stmt  ->  ECHO expr .   (rule 99)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    INC 	[reduce using rule 99 (stmt)]
    DEC 	[reduce using rule 99 (stmt)]
    '+' 	[reduce using rule 99 (stmt)]
    '-' 	[reduce using rule 99 (stmt)]
    $default	reduce using rule 99 (stmt)



state 58

    expr  ->  ID '(' . expr_list ')'   (rule 48)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 51 (expr_list)

    const_value	go to state 31
    expr	go to state 117
    expr_list_ne	go to state 118
    expr_list	go to state 119
    string	go to state 33
    variable	go to state 34



state 59

    variable_element  ->  ARROW . ID   (rule 57)
    variable_element  ->  ARROW . ID '(' expr_list ')'   (rule 58)

    ID  	shift, and go to state 120



state 60

    variable_element  ->  '[' . expr ']'   (rule 59)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 121
    string	go to state 33
    variable	go to state 34



state 61

    variable_element_list_ne  ->  variable_element .   (rule 60)

    $default	reduce using rule 60 (variable_element_list_ne)



state 62

    variable_element_list_ne  ->  variable_element_list_ne . variable_element   (rule 61)
    variable_element_list  ->  variable_element_list_ne .   (rule 63)

    ARROW	shift, and go to state 59
    '[' 	shift, and go to state 60

    $default	reduce using rule 63 (variable_element_list)

    variable_element	go to state 122



state 63

    variable  ->  VARNAME variable_element_list .   (rule 64)

    $default	reduce using rule 64 (variable)



state 64

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    expr  ->  INC expr .   (rule 43)


    $default	reduce using rule 43 (expr)



state 65

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    expr  ->  DEC expr .   (rule 44)


    $default	reduce using rule 44 (expr)



state 66

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  '+' expr .   (rule 33)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85

    $default	reduce using rule 33 (expr)



state 67

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  '-' expr .   (rule 34)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85

    $default	reduce using rule 34 (expr)



state 68

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  '!' expr .   (rule 23)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85

    $default	reduce using rule 23 (expr)



state 69

    expr  ->  '(' expr . ')'   (rule 14)
    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ')' 	shift, and go to state 123



state 70

    stmt_list_ne  ->  stmt .   (rule 104)

    $default	reduce using rule 104 (stmt_list_ne)



state 71

    stmt_list_ne  ->  stmt_list_ne . stmt   (rule 105)
    stmt_list  ->  stmt_list_ne .   (rule 107)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    INT_CONST	[reduce using rule 107 (stmt_list)]
    BOOL_CONST	[reduce using rule 107 (stmt_list)]
    CHAR_CONST	[reduce using rule 107 (stmt_list)]
    ARRAY	[reduce using rule 107 (stmt_list)]
    IF  	[reduce using rule 107 (stmt_list)]
    SWITCH	[reduce using rule 107 (stmt_list)]
    BREAK	[reduce using rule 107 (stmt_list)]
    FOR 	[reduce using rule 107 (stmt_list)]
    FOREACH	[reduce using rule 107 (stmt_list)]
    DO  	[reduce using rule 107 (stmt_list)]
    WHILE	[reduce using rule 107 (stmt_list)]
    FUNCTION	[reduce using rule 107 (stmt_list)]
    RETURN	[reduce using rule 107 (stmt_list)]
    ECHO	[reduce using rule 107 (stmt_list)]
    ID  	[reduce using rule 107 (stmt_list)]
    VARNAME	[reduce using rule 107 (stmt_list)]
    INC 	[reduce using rule 107 (stmt_list)]
    DEC 	[reduce using rule 107 (stmt_list)]
    '+' 	[reduce using rule 107 (stmt_list)]
    '-' 	[reduce using rule 107 (stmt_list)]
    '!' 	[reduce using rule 107 (stmt_list)]
    '(' 	[reduce using rule 107 (stmt_list)]
    '{' 	[reduce using rule 107 (stmt_list)]
    ';' 	[reduce using rule 107 (stmt_list)]
    $default	reduce using rule 107 (stmt_list)

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 124
    function_declaration	go to state 42



state 72

    stmt  ->  '{' stmt_list . '}'   (rule 102)

    '}' 	shift, and go to state 125



state 73

    program_stmt_list  ->  program_stmt_list program_stmt .   (rule 3)

    $default	reduce using rule 3 (program_stmt_list)



state 74

    main_stmt_list  ->  main_stmt_list main_stmt .   (rule 7)

    $default	reduce using rule 7 (main_stmt_list)



state 75

    expr  ->  expr COR . expr   (rule 24)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 126
    string	go to state 33
    variable	go to state 34



state 76

    expr  ->  expr CAND . expr   (rule 25)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 127
    string	go to state 33
    variable	go to state 34



state 77

    expr  ->  expr POR . expr   (rule 26)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 128
    string	go to state 33
    variable	go to state 34



state 78

    expr  ->  expr PAND . expr   (rule 27)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 129
    string	go to state 33
    variable	go to state 34



state 79

    expr  ->  expr PLUSAS . expr   (rule 36)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 130
    string	go to state 33
    variable	go to state 34



state 80

    expr  ->  expr MINUSAS . expr   (rule 37)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 131
    string	go to state 33
    variable	go to state 34



state 81

    expr  ->  expr MULTAS . expr   (rule 38)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 132
    string	go to state 33
    variable	go to state 34



state 82

    expr  ->  expr DIVAS . expr   (rule 39)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 133
    string	go to state 33
    variable	go to state 34



state 83

    expr  ->  expr MODAS . expr   (rule 40)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 134
    string	go to state 33
    variable	go to state 34



state 84

    expr  ->  expr INC .   (rule 41)

    $default	reduce using rule 41 (expr)



state 85

    expr  ->  expr DEC .   (rule 42)

    $default	reduce using rule 42 (expr)



state 86

    expr  ->  expr EQ . expr   (rule 19)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 135
    string	go to state 33
    variable	go to state 34



state 87

    expr  ->  expr NEQ . expr   (rule 20)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 136
    string	go to state 33
    variable	go to state 34



state 88

    expr  ->  expr GEQ . expr   (rule 18)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 137
    string	go to state 33
    variable	go to state 34



state 89

    expr  ->  expr LEQ . expr   (rule 16)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 138
    string	go to state 33
    variable	go to state 34



state 90

    expr  ->  expr TEQ . expr   (rule 21)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 139
    string	go to state 33
    variable	go to state 34



state 91

    expr  ->  expr TNEQ . expr   (rule 22)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 140
    string	go to state 33
    variable	go to state 34



state 92

    expr  ->  expr '=' . expr   (rule 35)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 141
    string	go to state 33
    variable	go to state 34



state 93

    expr  ->  expr '>' . expr   (rule 17)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 142
    string	go to state 33
    variable	go to state 34



state 94

    expr  ->  expr '<' . expr   (rule 15)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 143
    string	go to state 33
    variable	go to state 34



state 95

    expr  ->  expr '+' . expr   (rule 28)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 144
    string	go to state 33
    variable	go to state 34



state 96

    expr  ->  expr '-' . expr   (rule 29)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 145
    string	go to state 33
    variable	go to state 34



state 97

    expr  ->  expr '*' . expr   (rule 30)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 146
    string	go to state 33
    variable	go to state 34



state 98

    expr  ->  expr '/' . expr   (rule 31)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 147
    string	go to state 33
    variable	go to state 34



state 99

    expr  ->  expr '%' . expr   (rule 32)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 148
    string	go to state 33
    variable	go to state 34



state 100

    stmt  ->  expr ';' .   (rule 91)

    $default	reduce using rule 91 (stmt)



state 101

    string  ->  string VARNAME_IN_STR . CHAR_CONST   (rule 56)

    CHAR_CONST	shift, and go to state 149



state 102

    string  ->  CHAR_CONST VARNAME_IN_STR CHAR_CONST .   (rule 55)

    $default	reduce using rule 55 (string)



state 103

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    array_element  ->  expr .   (rule 69)
    array_element  ->  expr . SETVALUE expr   (rule 70)

    SETVALUE	shift, and go to state 150
    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 69 (array_element)



state 104

    array_ne  ->  array_element .   (rule 71)

    $default	reduce using rule 71 (array_ne)



state 105

    array_ne  ->  array_ne . ',' array_element   (rule 72)
    array  ->  array_ne .   (rule 74)

    ',' 	shift, and go to state 151

    $default	reduce using rule 74 (array)



state 106

    expr  ->  ARRAY '(' array . ')'   (rule 47)

    ')' 	shift, and go to state 152



state 107

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    if_stmt  ->  IF '(' expr . ')' stmt   (rule 75)
    if_stmt  ->  IF '(' expr . ')' stmt ELSE stmt   (rule 76)
    if_stmt  ->  IF '(' expr . ')' stmt else_if_stmt   (rule 77)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ')' 	shift, and go to state 153



state 108

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    switch_stmt  ->  SWITCH '(' expr . ')' '{' case_stmt_list '}'   (rule 84)
    switch_stmt  ->  SWITCH '(' expr . ')' '{' case_stmt_list DEFAULT ':' stmt_list   (rule 85)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ')' 	shift, and go to state 154



state 109

    for_stmt  ->  FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt   (rule 86)

    ';' 	shift, and go to state 155



state 110

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    foreach_stmt  ->  FOREACH '(' expr . AS VARNAME ')' stmt   (rule 89)
    foreach_stmt  ->  FOREACH '(' expr . AS VARNAME SETVALUE VARNAME ')' stmt   (rule 90)

    AS  	shift, and go to state 156
    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99



state 111

    do_while_stmt  ->  DO '{' stmt . '}' WHILE '(' expr ')' ';'   (rule 87)

    '}' 	shift, and go to state 157



state 112

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    while_stmt  ->  WHILE '(' expr . ')' stmt   (rule 88)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ')' 	shift, and go to state 158



state 113

    class_def  ->  CLASS ID EXTENDS . ID '{' class_body '}'   (rule 123)

    ID  	shift, and go to state 159



state 114

    class_def  ->  CLASS ID '{' . class_body '}'   (rule 122)

    PUBLIC	shift, and go to state 160
    PRIVATE	shift, and go to state 161
    PROTECTED	shift, and go to state 162
    FUNCTION	shift, and go to state 14

    $default	reduce using rule 120 (class_body)

    function_declaration	go to state 163
    field_name	go to state 164
    class_body_element	go to state 165
    class_body_ne	go to state 166
    class_body	go to state 167



state 115

    function_declaration  ->  FUNCTION ID '(' . var_list ')' '{' stmt_list '}'   (rule 108)

    VARNAME	shift, and go to state 168

    var_list_element	go to state 169
    var_list	go to state 170



state 116

    stmt  ->  RETURN expr_e ';' .   (rule 101)

    $default	reduce using rule 101 (stmt)



state 117

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    expr_list_ne  ->  expr .   (rule 49)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 49 (expr_list_ne)



state 118

    expr_list_ne  ->  expr_list_ne . ',' expr   (rule 50)
    expr_list  ->  expr_list_ne .   (rule 52)

    ',' 	shift, and go to state 171

    $default	reduce using rule 52 (expr_list)



state 119

    expr  ->  ID '(' expr_list . ')'   (rule 48)

    ')' 	shift, and go to state 172



state 120

    variable_element  ->  ARROW ID .   (rule 57)
    variable_element  ->  ARROW ID . '(' expr_list ')'   (rule 58)

    '(' 	shift, and go to state 173

    '(' 	[reduce using rule 57 (variable_element)]
    $default	reduce using rule 57 (variable_element)



state 121

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    variable_element  ->  '[' expr . ']'   (rule 59)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ']' 	shift, and go to state 174



state 122

    variable_element_list_ne  ->  variable_element_list_ne variable_element .   (rule 61)

    $default	reduce using rule 61 (variable_element_list_ne)



state 123

    expr  ->  '(' expr ')' .   (rule 14)

    $default	reduce using rule 14 (expr)



state 124

    stmt_list_ne  ->  stmt_list_ne stmt .   (rule 105)

    $default	reduce using rule 105 (stmt_list_ne)



state 125

    stmt  ->  '{' stmt_list '}' .   (rule 102)

    $default	reduce using rule 102 (stmt)



state 126

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr COR expr .   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 24 (expr)



state 127

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr CAND expr .   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 25 (expr)



state 128

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr POR expr .   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 26 (expr)



state 129

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr PAND expr .   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 27 (expr)



state 130

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr PLUSAS expr .   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 36 (expr)



state 131

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr MINUSAS expr .   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 37 (expr)



state 132

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr MULTAS expr .   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 38 (expr)



state 133

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr DIVAS expr .   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 39 (expr)



state 134

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr MODAS expr .   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 40 (expr)



state 135

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr EQ expr .   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    EQ  	error (nonassociative)
    NEQ 	error (nonassociative)
    TEQ 	error (nonassociative)
    TNEQ	error (nonassociative)

    $default	reduce using rule 19 (expr)



state 136

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr NEQ expr .   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    EQ  	error (nonassociative)
    NEQ 	error (nonassociative)
    TEQ 	error (nonassociative)
    TNEQ	error (nonassociative)

    $default	reduce using rule 20 (expr)



state 137

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr GEQ expr .   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    GEQ 	error (nonassociative)
    LEQ 	error (nonassociative)
    '>' 	error (nonassociative)
    '<' 	error (nonassociative)

    $default	reduce using rule 18 (expr)



state 138

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr LEQ expr .   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    GEQ 	error (nonassociative)
    LEQ 	error (nonassociative)
    '>' 	error (nonassociative)
    '<' 	error (nonassociative)

    $default	reduce using rule 16 (expr)



state 139

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr TEQ expr .   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    EQ  	error (nonassociative)
    NEQ 	error (nonassociative)
    TEQ 	error (nonassociative)
    TNEQ	error (nonassociative)

    $default	reduce using rule 21 (expr)



state 140

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr TNEQ expr .   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    EQ  	error (nonassociative)
    NEQ 	error (nonassociative)
    TEQ 	error (nonassociative)
    TNEQ	error (nonassociative)

    $default	reduce using rule 22 (expr)



state 141

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr '=' expr .   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 35 (expr)



state 142

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr '>' expr .   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    GEQ 	error (nonassociative)
    LEQ 	error (nonassociative)
    '>' 	error (nonassociative)
    '<' 	error (nonassociative)

    $default	reduce using rule 17 (expr)



state 143

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr '<' expr .   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    GEQ 	error (nonassociative)
    LEQ 	error (nonassociative)
    '>' 	error (nonassociative)
    '<' 	error (nonassociative)

    $default	reduce using rule 15 (expr)



state 144

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr '+' expr .   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 28 (expr)



state 145

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr '-' expr .   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 29 (expr)



state 146

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr '*' expr .   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85

    $default	reduce using rule 30 (expr)



state 147

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr '/' expr .   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85

    $default	reduce using rule 31 (expr)



state 148

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr '%' expr .   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)

    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85

    $default	reduce using rule 32 (expr)



state 149

    string  ->  string VARNAME_IN_STR CHAR_CONST .   (rule 56)

    $default	reduce using rule 56 (string)



state 150

    array_element  ->  expr SETVALUE . expr   (rule 70)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 175
    string	go to state 33
    variable	go to state 34



state 151

    array_ne  ->  array_ne ',' . array_element   (rule 72)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 103
    string	go to state 33
    variable	go to state 34
    array_element	go to state 176



state 152

    expr  ->  ARRAY '(' array ')' .   (rule 47)

    $default	reduce using rule 47 (expr)



state 153

    if_stmt  ->  IF '(' expr ')' . stmt   (rule 75)
    if_stmt  ->  IF '(' expr ')' . stmt ELSE stmt   (rule 76)
    if_stmt  ->  IF '(' expr ')' . stmt else_if_stmt   (rule 77)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 177
    function_declaration	go to state 42



state 154

    switch_stmt  ->  SWITCH '(' expr ')' . '{' case_stmt_list '}'   (rule 84)
    switch_stmt  ->  SWITCH '(' expr ')' . '{' case_stmt_list DEFAULT ':' stmt_list   (rule 85)

    '{' 	shift, and go to state 178



state 155

    for_stmt  ->  FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt   (rule 86)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 53 (expr_e)

    const_value	go to state 31
    expr	go to state 55
    expr_e	go to state 179
    string	go to state 33
    variable	go to state 34



state 156

    foreach_stmt  ->  FOREACH '(' expr AS . VARNAME ')' stmt   (rule 89)
    foreach_stmt  ->  FOREACH '(' expr AS . VARNAME SETVALUE VARNAME ')' stmt   (rule 90)

    VARNAME	shift, and go to state 180



state 157

    do_while_stmt  ->  DO '{' stmt '}' . WHILE '(' expr ')' ';'   (rule 87)

    WHILE	shift, and go to state 181



state 158

    while_stmt  ->  WHILE '(' expr ')' . stmt   (rule 88)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 182
    function_declaration	go to state 42



state 159

    class_def  ->  CLASS ID EXTENDS ID . '{' class_body '}'   (rule 123)

    '{' 	shift, and go to state 183



state 160

    field_name  ->  PUBLIC . VARNAME   (rule 109)
    class_body_element  ->  PUBLIC . function_declaration   (rule 115)

    FUNCTION	shift, and go to state 14
    VARNAME	shift, and go to state 184

    function_declaration	go to state 185



state 161

    field_name  ->  PRIVATE . VARNAME   (rule 110)
    class_body_element  ->  PRIVATE . function_declaration   (rule 116)

    FUNCTION	shift, and go to state 14
    VARNAME	shift, and go to state 186

    function_declaration	go to state 187



state 162

    field_name  ->  PROTECTED . VARNAME   (rule 111)
    class_body_element  ->  PROTECTED . function_declaration   (rule 117)

    FUNCTION	shift, and go to state 14
    VARNAME	shift, and go to state 188

    function_declaration	go to state 189



state 163

    class_body_element  ->  function_declaration .   (rule 114)

    $default	reduce using rule 114 (class_body_element)



state 164

    class_body_element  ->  field_name . ';'   (rule 112)
    class_body_element  ->  field_name . '=' const_value ';'   (rule 113)

    '=' 	shift, and go to state 190
    ';' 	shift, and go to state 191



state 165

    class_body_ne  ->  class_body_element .   (rule 118)

    $default	reduce using rule 118 (class_body_ne)



state 166

    class_body_ne  ->  class_body_ne . class_body_element   (rule 119)
    class_body  ->  class_body_ne .   (rule 121)

    PUBLIC	shift, and go to state 160
    PRIVATE	shift, and go to state 161
    PROTECTED	shift, and go to state 162
    FUNCTION	shift, and go to state 14

    $default	reduce using rule 121 (class_body)

    function_declaration	go to state 163
    field_name	go to state 164
    class_body_element	go to state 192



state 167

    class_def  ->  CLASS ID '{' class_body . '}'   (rule 122)

    '}' 	shift, and go to state 193



state 168

    var_list_element  ->  VARNAME .   (rule 65)
    var_list_element  ->  VARNAME . '=' expr   (rule 66)

    '=' 	shift, and go to state 194

    $default	reduce using rule 65 (var_list_element)



state 169

    var_list  ->  var_list_element .   (rule 67)

    $default	reduce using rule 67 (var_list)



state 170

    var_list  ->  var_list . ',' var_list_element   (rule 68)
    function_declaration  ->  FUNCTION ID '(' var_list . ')' '{' stmt_list '}'   (rule 108)

    ',' 	shift, and go to state 195
    ')' 	shift, and go to state 196



state 171

    expr_list_ne  ->  expr_list_ne ',' . expr   (rule 50)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 197
    string	go to state 33
    variable	go to state 34



state 172

    expr  ->  ID '(' expr_list ')' .   (rule 48)

    $default	reduce using rule 48 (expr)



state 173

    variable_element  ->  ARROW ID '(' . expr_list ')'   (rule 58)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 51 (expr_list)

    const_value	go to state 31
    expr	go to state 117
    expr_list_ne	go to state 118
    expr_list	go to state 198
    string	go to state 33
    variable	go to state 34



state 174

    variable_element  ->  '[' expr ']' .   (rule 59)

    $default	reduce using rule 59 (variable_element)



state 175

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    array_element  ->  expr SETVALUE expr .   (rule 70)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 70 (array_element)



state 176

    array_ne  ->  array_ne ',' array_element .   (rule 72)

    $default	reduce using rule 72 (array_ne)



state 177

    if_stmt  ->  IF '(' expr ')' stmt .   (rule 75)
    if_stmt  ->  IF '(' expr ')' stmt . ELSE stmt   (rule 76)
    if_stmt  ->  IF '(' expr ')' stmt . else_if_stmt   (rule 77)

    ELSE	shift, and go to state 199
    ELSEIF	shift, and go to state 200

    ELSE	[reduce using rule 75 (if_stmt)]
    ELSEIF	[reduce using rule 75 (if_stmt)]
    $default	reduce using rule 75 (if_stmt)

    else_if_stmt	go to state 201



state 178

    switch_stmt  ->  SWITCH '(' expr ')' '{' . case_stmt_list '}'   (rule 84)
    switch_stmt  ->  SWITCH '(' expr ')' '{' . case_stmt_list DEFAULT ':' stmt_list   (rule 85)

    CASE	shift, and go to state 202

    case_stmt	go to state 203
    case_stmt_list	go to state 204



state 179

    for_stmt  ->  FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt   (rule 86)

    ';' 	shift, and go to state 205



state 180

    foreach_stmt  ->  FOREACH '(' expr AS VARNAME . ')' stmt   (rule 89)
    foreach_stmt  ->  FOREACH '(' expr AS VARNAME . SETVALUE VARNAME ')' stmt   (rule 90)

    SETVALUE	shift, and go to state 206
    ')' 	shift, and go to state 207



state 181

    do_while_stmt  ->  DO '{' stmt '}' WHILE . '(' expr ')' ';'   (rule 87)

    '(' 	shift, and go to state 208



state 182

    while_stmt  ->  WHILE '(' expr ')' stmt .   (rule 88)

    $default	reduce using rule 88 (while_stmt)



state 183

    class_def  ->  CLASS ID EXTENDS ID '{' . class_body '}'   (rule 123)

    PUBLIC	shift, and go to state 160
    PRIVATE	shift, and go to state 161
    PROTECTED	shift, and go to state 162
    FUNCTION	shift, and go to state 14

    $default	reduce using rule 120 (class_body)

    function_declaration	go to state 163
    field_name	go to state 164
    class_body_element	go to state 165
    class_body_ne	go to state 166
    class_body	go to state 209



state 184

    field_name  ->  PUBLIC VARNAME .   (rule 109)

    $default	reduce using rule 109 (field_name)



state 185

    class_body_element  ->  PUBLIC function_declaration .   (rule 115)

    $default	reduce using rule 115 (class_body_element)



state 186

    field_name  ->  PRIVATE VARNAME .   (rule 110)

    $default	reduce using rule 110 (field_name)



state 187

    class_body_element  ->  PRIVATE function_declaration .   (rule 116)

    $default	reduce using rule 116 (class_body_element)



state 188

    field_name  ->  PROTECTED VARNAME .   (rule 111)

    $default	reduce using rule 111 (field_name)



state 189

    class_body_element  ->  PROTECTED function_declaration .   (rule 117)

    $default	reduce using rule 117 (class_body_element)



state 190

    class_body_element  ->  field_name '=' . const_value ';'   (rule 113)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 210

    const_value	go to state 211



state 191

    class_body_element  ->  field_name ';' .   (rule 112)

    $default	reduce using rule 112 (class_body_element)



state 192

    class_body_ne  ->  class_body_ne class_body_element .   (rule 119)

    $default	reduce using rule 119 (class_body_ne)



state 193

    class_def  ->  CLASS ID '{' class_body '}' .   (rule 122)

    $default	reduce using rule 122 (class_def)



state 194

    var_list_element  ->  VARNAME '=' . expr   (rule 66)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 212
    string	go to state 33
    variable	go to state 34



state 195

    var_list  ->  var_list ',' . var_list_element   (rule 68)

    VARNAME	shift, and go to state 168

    var_list_element	go to state 213



state 196

    function_declaration  ->  FUNCTION ID '(' var_list ')' . '{' stmt_list '}'   (rule 108)

    '{' 	shift, and go to state 214



state 197

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    expr_list_ne  ->  expr_list_ne ',' expr .   (rule 50)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 50 (expr_list_ne)



state 198

    variable_element  ->  ARROW ID '(' expr_list . ')'   (rule 58)

    ')' 	shift, and go to state 215



state 199

    if_stmt  ->  IF '(' expr ')' stmt ELSE . stmt   (rule 76)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 216
    function_declaration	go to state 42



state 200

    else_if_stmt  ->  ELSEIF . '(' expr ')' stmt   (rule 78)
    else_if_stmt  ->  ELSEIF . '(' expr ')' stmt ELSE stmt   (rule 79)
    else_if_stmt  ->  ELSEIF . '(' expr ')' stmt else_if_stmt   (rule 80)

    '(' 	shift, and go to state 217



state 201

    if_stmt  ->  IF '(' expr ')' stmt else_if_stmt .   (rule 77)

    $default	reduce using rule 77 (if_stmt)



state 202

    case_stmt  ->  CASE . expr ':' stmt_list   (rule 81)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 218
    string	go to state 33
    variable	go to state 34



state 203

    case_stmt_list  ->  case_stmt .   (rule 82)

    $default	reduce using rule 82 (case_stmt_list)



state 204

    case_stmt_list  ->  case_stmt_list . case_stmt   (rule 83)
    switch_stmt  ->  SWITCH '(' expr ')' '{' case_stmt_list . '}'   (rule 84)
    switch_stmt  ->  SWITCH '(' expr ')' '{' case_stmt_list . DEFAULT ':' stmt_list   (rule 85)

    CASE	shift, and go to state 202
    DEFAULT	shift, and go to state 219
    '}' 	shift, and go to state 220

    case_stmt	go to state 221



state 205

    for_stmt  ->  FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt   (rule 86)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 53 (expr_e)

    const_value	go to state 31
    expr	go to state 55
    expr_e	go to state 222
    string	go to state 33
    variable	go to state 34



state 206

    foreach_stmt  ->  FOREACH '(' expr AS VARNAME SETVALUE . VARNAME ')' stmt   (rule 90)

    VARNAME	shift, and go to state 223



state 207

    foreach_stmt  ->  FOREACH '(' expr AS VARNAME ')' . stmt   (rule 89)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 224
    function_declaration	go to state 42



state 208

    do_while_stmt  ->  DO '{' stmt '}' WHILE '(' . expr ')' ';'   (rule 87)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 225
    string	go to state 33
    variable	go to state 34



state 209

    class_def  ->  CLASS ID EXTENDS ID '{' class_body . '}'   (rule 123)

    '}' 	shift, and go to state 226



state 210

    const_value  ->  CHAR_CONST .   (rule 12)

    $default	reduce using rule 12 (const_value)



state 211

    class_body_element  ->  field_name '=' const_value . ';'   (rule 113)

    ';' 	shift, and go to state 227



state 212

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    var_list_element  ->  VARNAME '=' expr .   (rule 66)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99

    $default	reduce using rule 66 (var_list_element)



state 213

    var_list  ->  var_list ',' var_list_element .   (rule 68)

    $default	reduce using rule 68 (var_list)



state 214

    function_declaration  ->  FUNCTION ID '(' var_list ')' '{' . stmt_list '}'   (rule 108)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    $default	reduce using rule 106 (stmt_list)

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 70
    stmt_list_ne	go to state 71
    stmt_list	go to state 228
    function_declaration	go to state 42



state 215

    variable_element  ->  ARROW ID '(' expr_list ')' .   (rule 58)

    $default	reduce using rule 58 (variable_element)



state 216

    if_stmt  ->  IF '(' expr ')' stmt ELSE stmt .   (rule 76)

    $default	reduce using rule 76 (if_stmt)



state 217

    else_if_stmt  ->  ELSEIF '(' . expr ')' stmt   (rule 78)
    else_if_stmt  ->  ELSEIF '(' . expr ')' stmt ELSE stmt   (rule 79)
    else_if_stmt  ->  ELSEIF '(' . expr ')' stmt else_if_stmt   (rule 80)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    const_value	go to state 31
    expr	go to state 229
    string	go to state 33
    variable	go to state 34



state 218

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    case_stmt  ->  CASE expr . ':' stmt_list   (rule 81)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ':' 	shift, and go to state 230



state 219

    switch_stmt  ->  SWITCH '(' expr ')' '{' case_stmt_list DEFAULT . ':' stmt_list   (rule 85)

    ':' 	shift, and go to state 231



state 220

    switch_stmt  ->  SWITCH '(' expr ')' '{' case_stmt_list '}' .   (rule 84)

    $default	reduce using rule 84 (switch_stmt)



state 221

    case_stmt_list  ->  case_stmt_list case_stmt .   (rule 83)

    $default	reduce using rule 83 (case_stmt_list)



state 222

    for_stmt  ->  FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt   (rule 86)

    ')' 	shift, and go to state 232



state 223

    foreach_stmt  ->  FOREACH '(' expr AS VARNAME SETVALUE VARNAME . ')' stmt   (rule 90)

    ')' 	shift, and go to state 233



state 224

    foreach_stmt  ->  FOREACH '(' expr AS VARNAME ')' stmt .   (rule 89)

    $default	reduce using rule 89 (foreach_stmt)



state 225

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    do_while_stmt  ->  DO '{' stmt '}' WHILE '(' expr . ')' ';'   (rule 87)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ')' 	shift, and go to state 234



state 226

    class_def  ->  CLASS ID EXTENDS ID '{' class_body '}' .   (rule 123)

    $default	reduce using rule 123 (class_def)



state 227

    class_body_element  ->  field_name '=' const_value ';' .   (rule 113)

    $default	reduce using rule 113 (class_body_element)



state 228

    function_declaration  ->  FUNCTION ID '(' var_list ')' '{' stmt_list . '}'   (rule 108)

    '}' 	shift, and go to state 235



state 229

    expr  ->  expr . '<' expr   (rule 15)
    expr  ->  expr . LEQ expr   (rule 16)
    expr  ->  expr . '>' expr   (rule 17)
    expr  ->  expr . GEQ expr   (rule 18)
    expr  ->  expr . EQ expr   (rule 19)
    expr  ->  expr . NEQ expr   (rule 20)
    expr  ->  expr . TEQ expr   (rule 21)
    expr  ->  expr . TNEQ expr   (rule 22)
    expr  ->  expr . COR expr   (rule 24)
    expr  ->  expr . CAND expr   (rule 25)
    expr  ->  expr . POR expr   (rule 26)
    expr  ->  expr . PAND expr   (rule 27)
    expr  ->  expr . '+' expr   (rule 28)
    expr  ->  expr . '-' expr   (rule 29)
    expr  ->  expr . '*' expr   (rule 30)
    expr  ->  expr . '/' expr   (rule 31)
    expr  ->  expr . '%' expr   (rule 32)
    expr  ->  expr . '=' expr   (rule 35)
    expr  ->  expr . PLUSAS expr   (rule 36)
    expr  ->  expr . MINUSAS expr   (rule 37)
    expr  ->  expr . MULTAS expr   (rule 38)
    expr  ->  expr . DIVAS expr   (rule 39)
    expr  ->  expr . MODAS expr   (rule 40)
    expr  ->  expr . INC   (rule 41)
    expr  ->  expr . DEC   (rule 42)
    else_if_stmt  ->  ELSEIF '(' expr . ')' stmt   (rule 78)
    else_if_stmt  ->  ELSEIF '(' expr . ')' stmt ELSE stmt   (rule 79)
    else_if_stmt  ->  ELSEIF '(' expr . ')' stmt else_if_stmt   (rule 80)

    COR 	shift, and go to state 75
    CAND	shift, and go to state 76
    POR 	shift, and go to state 77
    PAND	shift, and go to state 78
    PLUSAS	shift, and go to state 79
    MINUSAS	shift, and go to state 80
    MULTAS	shift, and go to state 81
    DIVAS	shift, and go to state 82
    MODAS	shift, and go to state 83
    INC 	shift, and go to state 84
    DEC 	shift, and go to state 85
    EQ  	shift, and go to state 86
    NEQ 	shift, and go to state 87
    GEQ 	shift, and go to state 88
    LEQ 	shift, and go to state 89
    TEQ 	shift, and go to state 90
    TNEQ	shift, and go to state 91
    '=' 	shift, and go to state 92
    '>' 	shift, and go to state 93
    '<' 	shift, and go to state 94
    '+' 	shift, and go to state 95
    '-' 	shift, and go to state 96
    '*' 	shift, and go to state 97
    '/' 	shift, and go to state 98
    '%' 	shift, and go to state 99
    ')' 	shift, and go to state 236



state 230

    case_stmt  ->  CASE expr ':' . stmt_list   (rule 81)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    $default	reduce using rule 106 (stmt_list)

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 70
    stmt_list_ne	go to state 71
    stmt_list	go to state 237
    function_declaration	go to state 42



state 231

    switch_stmt  ->  SWITCH '(' expr ')' '{' case_stmt_list DEFAULT ':' . stmt_list   (rule 85)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    INT_CONST	[reduce using rule 106 (stmt_list)]
    BOOL_CONST	[reduce using rule 106 (stmt_list)]
    CHAR_CONST	[reduce using rule 106 (stmt_list)]
    ARRAY	[reduce using rule 106 (stmt_list)]
    IF  	[reduce using rule 106 (stmt_list)]
    SWITCH	[reduce using rule 106 (stmt_list)]
    BREAK	[reduce using rule 106 (stmt_list)]
    FOR 	[reduce using rule 106 (stmt_list)]
    FOREACH	[reduce using rule 106 (stmt_list)]
    DO  	[reduce using rule 106 (stmt_list)]
    WHILE	[reduce using rule 106 (stmt_list)]
    FUNCTION	[reduce using rule 106 (stmt_list)]
    RETURN	[reduce using rule 106 (stmt_list)]
    ECHO	[reduce using rule 106 (stmt_list)]
    ID  	[reduce using rule 106 (stmt_list)]
    VARNAME	[reduce using rule 106 (stmt_list)]
    INC 	[reduce using rule 106 (stmt_list)]
    DEC 	[reduce using rule 106 (stmt_list)]
    '+' 	[reduce using rule 106 (stmt_list)]
    '-' 	[reduce using rule 106 (stmt_list)]
    '!' 	[reduce using rule 106 (stmt_list)]
    '(' 	[reduce using rule 106 (stmt_list)]
    '{' 	[reduce using rule 106 (stmt_list)]
    ';' 	[reduce using rule 106 (stmt_list)]
    $default	reduce using rule 106 (stmt_list)

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 70
    stmt_list_ne	go to state 71
    stmt_list	go to state 238
    function_declaration	go to state 42



state 232

    for_stmt  ->  FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt   (rule 86)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 239
    function_declaration	go to state 42



state 233

    foreach_stmt  ->  FOREACH '(' expr AS VARNAME SETVALUE VARNAME ')' . stmt   (rule 90)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 240
    function_declaration	go to state 42



state 234

    do_while_stmt  ->  DO '{' stmt '}' WHILE '(' expr ')' . ';'   (rule 87)

    ';' 	shift, and go to state 241



state 235

    function_declaration  ->  FUNCTION ID '(' var_list ')' '{' stmt_list '}' .   (rule 108)

    $default	reduce using rule 108 (function_declaration)



state 236

    else_if_stmt  ->  ELSEIF '(' expr ')' . stmt   (rule 78)
    else_if_stmt  ->  ELSEIF '(' expr ')' . stmt ELSE stmt   (rule 79)
    else_if_stmt  ->  ELSEIF '(' expr ')' . stmt else_if_stmt   (rule 80)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 242
    function_declaration	go to state 42



state 237

    case_stmt  ->  CASE expr ':' stmt_list .   (rule 81)

    $default	reduce using rule 81 (case_stmt)



state 238

    switch_stmt  ->  SWITCH '(' expr ')' '{' case_stmt_list DEFAULT ':' stmt_list .   (rule 85)

    $default	reduce using rule 85 (switch_stmt)



state 239

    for_stmt  ->  FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .   (rule 86)

    $default	reduce using rule 86 (for_stmt)



state 240

    foreach_stmt  ->  FOREACH '(' expr AS VARNAME SETVALUE VARNAME ')' stmt .   (rule 90)

    $default	reduce using rule 90 (foreach_stmt)



state 241

    do_while_stmt  ->  DO '{' stmt '}' WHILE '(' expr ')' ';' .   (rule 87)

    $default	reduce using rule 87 (do_while_stmt)



state 242

    else_if_stmt  ->  ELSEIF '(' expr ')' stmt .   (rule 78)
    else_if_stmt  ->  ELSEIF '(' expr ')' stmt . ELSE stmt   (rule 79)
    else_if_stmt  ->  ELSEIF '(' expr ')' stmt . else_if_stmt   (rule 80)

    ELSE	shift, and go to state 243
    ELSEIF	shift, and go to state 200

    ELSE	[reduce using rule 78 (else_if_stmt)]
    ELSEIF	[reduce using rule 78 (else_if_stmt)]
    $default	reduce using rule 78 (else_if_stmt)

    else_if_stmt	go to state 244



state 243

    else_if_stmt  ->  ELSEIF '(' expr ')' stmt ELSE . stmt   (rule 79)

    INT_CONST	shift, and go to state 1
    BOOL_CONST	shift, and go to state 2
    CHAR_CONST	shift, and go to state 3
    ARRAY	shift, and go to state 5
    IF  	shift, and go to state 6
    SWITCH	shift, and go to state 7
    BREAK	shift, and go to state 8
    FOR 	shift, and go to state 9
    FOREACH	shift, and go to state 10
    DO  	shift, and go to state 11
    WHILE	shift, and go to state 12
    FUNCTION	shift, and go to state 14
    RETURN	shift, and go to state 15
    ECHO	shift, and go to state 16
    ID  	shift, and go to state 17
    VARNAME	shift, and go to state 18
    INC 	shift, and go to state 19
    DEC 	shift, and go to state 20
    '+' 	shift, and go to state 21
    '-' 	shift, and go to state 22
    '!' 	shift, and go to state 23
    '(' 	shift, and go to state 24
    '{' 	shift, and go to state 25
    ';' 	shift, and go to state 26

    const_value	go to state 31
    expr	go to state 32
    string	go to state 33
    variable	go to state 34
    if_stmt	go to state 35
    switch_stmt	go to state 36
    for_stmt	go to state 37
    do_while_stmt	go to state 38
    while_stmt	go to state 39
    foreach_stmt	go to state 40
    stmt	go to state 245
    function_declaration	go to state 42



state 244

    else_if_stmt  ->  ELSEIF '(' expr ')' stmt else_if_stmt .   (rule 80)

    $default	reduce using rule 80 (else_if_stmt)



state 245

    else_if_stmt  ->  ELSEIF '(' expr ')' stmt ELSE stmt .   (rule 79)

    $default	reduce using rule 79 (else_if_stmt)



state 246

    $   	go to state 247



state 247

    $   	go to state 248



state 248

    $default	accept
